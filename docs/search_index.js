var documenterSearchIndex = {"docs":
[{"location":"Simulation/componementModel/#组件化建模实例","page":"组件化建模实例","title":"组件化建模实例","text":"","category":"section"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"tip: Tip\nContents：MTK、组件化建模Contributor: YJYEmail:522432938@qq.com如有错误，请批评指正。","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"note: Note\nMTK = ModelingToolkit.jlModelingToolkit.jl Acausal Component-Based Modeling the RC Circuit介绍了组件化建模的例子","category":"page"},{"location":"Simulation/componementModel/#MTK符号建模","page":"组件化建模实例","title":"MTK符号建模","text":"","category":"section"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"在DifferentialEquations建模方法与ModelingToolkit建模方法中介绍DE与MTK的两种建模方式。分析了使用它们建模的具体步骤与实现方法，并介绍了相应的内涵。","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"这一篇中主要介绍符号建模的另一个强大功能——组件化建模。","category":"page"},{"location":"Simulation/componementModel/#RC电路建模实例","page":"组件化建模实例","title":"RC电路建模实例","text":"","category":"section"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"仿真如下图的电路系统：","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"(Image: 图 2)  ","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"@MTK版本：8.5.5","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"using ModelingToolkit, Plots, DifferentialEquations\r\n\r\n@variables t\r\n@connector function Pin(; name)\r\n    sts = @variables v(t) = 1.0 i(t) = 1.0 [connect = Flow]\r\n    ODESystem(Equation[], t, sts, []; name=name)\r\nend\r\n\r\nfunction Ground(; name)\r\n    @named g = Pin()\r\n    eqs = [g.v ~ 0]\r\n    compose(ODESystem(eqs, t, [], []; name=name), g)\r\nend\r\n\r\nfunction OnePort(; name)\r\n    @named p = Pin()\r\n    @named n = Pin()\r\n    sts = @variables v(t) = 1.0 i(t) = 1.0\r\n    eqs = [\r\n        v ~ p.v - n.v\r\n        0 ~ p.i + n.i\r\n        i ~ p.i\r\n    ]\r\n    compose(ODESystem(eqs, t, sts, []; name=name), p, n)\r\nend\r\n\r\nfunction Resistor(; name, R=1.0)\r\n    @named oneport = OnePort()\r\n    @unpack v, i = oneport\r\n    ps = @parameters R = R\r\n    eqs = [\r\n        v ~ i * R\r\n    ]\r\n    extend(ODESystem(eqs, t, [], ps; name=name), oneport)\r\nend\r\n\r\nfunction Capacitor(; name, C=1.0)\r\n    @named oneport = OnePort()\r\n    @unpack v, i = oneport\r\n    ps = @parameters C = C\r\n    D = Differential(t)\r\n    eqs = [\r\n        D(v) ~ i / C\r\n    ]\r\n    extend(ODESystem(eqs, t, [], ps; name=name), oneport)\r\nend\r\n\r\nfunction ConstantVoltage(; name, V=1.0)\r\n    @named oneport = OnePort()\r\n    @unpack v = oneport\r\n    ps = @parameters V = V\r\n    eqs = [\r\n        V ~ v\r\n    ]\r\n    extend(ODESystem(eqs, t, [], ps; name=name), oneport)\r\nend\r\n\r\nfunction Inductor(; name, L=1.0)\r\n    @named oneport = OnePort()\r\n    @unpack v, i = oneport\r\n    ps = @parameters L = L\r\n    D = Differential(t)\r\n    eqs = [\r\n        D(i) ~ v / L\r\n    ]\r\n    extend(ODESystem(eqs, t, [], ps; name=name), oneport)\r\nend\r\n\r\nfunction ChangeableVoltage(; name)\r\n    @named oneport = OnePort()\r\n    @unpack v, i = oneport\r\n    eqs = [\r\n        v ~ 16 * sin(2π * t)\r\n    ]\r\n    extend(ODESystem(eqs, t, [], []; name=name), oneport)\r\nend\r\n\r\n\r\n\r\n@named resistor = Resistor(R=3.0)\r\n@named capacitor = Capacitor(C=1.0 / 24)\r\n@named source = ChangeableVoltage()\r\n@named inductor = Inductor(L=0.1)\r\n@named ground = Ground()\r\n\r\n\r\nrc_eqs = [\r\n    connect(source.p, capacitor.p)\r\n    connect(capacitor.n, inductor.p)\r\n    connect(inductor.n, resistor.p)\r\n    connect(source.n, resistor.n, ground.g)\r\n]\r\n\r\n\r\n@named _rc_model = ODESystem(rc_eqs, t)\r\n@named rc_model = compose(_rc_model,\r\n    [resistor, inductor, capacitor, source, ground])\r\n\r\nsys = structural_simplify(rc_model)\r\n\r\nusing Plots\r\nu0 = [\r\n    capacitor.v => 0.0\r\n    capacitor.p.i => 0.0\r\n    inductor.i => 0\r\n    inductor.v => 0\r\n]\r\nprob = ODAEProblem(sys, u0, (0, 10.0))\r\nsol = solve(prob, Tsit5())\r\nsol[resistor.p.i]\r\np1 = plot(sol, vars=[capacitor.v capacitor.p.i], xlims=(0, 10), ylim=(-20, 20))\r\np2 = plot(sol, vars=[inductor.v inductor.i], xlims=(0, 10), ylim=(-5, 5))\r\nplot(p1, p2, layout=(2, 1))","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"结果如图所示：","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"(Image: 图 1)  ","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"主要的过程有以下几步：","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"构建组件\n定义组件实例\n连接系统\n化简\n设置初值\n构建问题并求解\n结果处理","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"构建组件过程中主要有两方面考虑，系统内部结构与系统对外接口。","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"内部结构则是各个组件内部的数学特性。对于电阻有： V=R*I","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"对于电容有： fracdVdt=fracIC","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"对于电感有： fracdIdt=fracVL","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"这些关系可以在模型构建时体现。这是系统的内部变量之间的决定关系。","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"外部结构是模块化的另一个关键部分。","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"RC的接口体现在函数Pin()上，每一个组件都由两个Pin——输入引脚与输出引脚。这完全是抽象出来的，引脚存在的意义就是为了连接。每个引脚有自己的电压值（更准确的说是电势大小）以及电流。这些变量的引入只是为了跟好地模块化。例如，器件A的出口引脚与器件B的进口引脚相连，它们在电路模型中完全可以视为一个等价的点。为了使模块变得更加完整，分化出来各自的引脚。事实上，这些引脚变量在最后计算时，被化简消除了。","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"所以，在模块化的过程中为了使个组件变得完整，会派生出很多变量，这些变量都是“锦上添花”的存在，不具备决定性意义。但它们又是使各模块间能够衔接的必要存在。","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"\r\n@named resistor = Resistor(R=3.0)\r\n@named capacitor = Capacitor(C=1.0 / 24)\r\n@named source = ChangeableVoltage()\r\n@named inductor = Inductor(L=0.1)\r\n@named ground = Ground()\r\n","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"组件实例化中的@named的作用是给相应组件命名，每个组件的本质都是一个ODESystem，不同的组件不过是ODESystem中存储的方程不同。ODESystem中有一个成员为name，@named把实例的名称赋值给这个成员变量。","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"例如,下面两种定义方式是等价的。","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"\r\n@named resistor = Resistor(R=3.0)\r\n\r\nresistor = Resistor(R=3.0;name =:resistor)","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"rc_eqs = [\r\n    connect(source.p, capacitor.p)\r\n    connect(capacitor.n, inductor.p)\r\n    connect(inductor.n, resistor.p)\r\n    connect(source.n, resistor.n, ground.g)\r\n]","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"依据系统的拓扑结构进行连接。connect函数可以接受任意参数个（并联中多点连接的问题就解决了）。连接的本质是建立模块间的联系，连接模块内部的机理，一旦连接绑定，这些变量的使命就完成了。","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"化简的过程中，会把多余的中间变量都消去。","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"sys = structural_simplify(rc_model)","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"查看各组件各变量的求解结果：","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"sol[resistor.p.i]","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"值得一提的是，在求解的过程中会化简，但是依旧可以查看这些变量的求解结果。方法如示例所示。","category":"page"},{"location":"Simulation/componementModel/","page":"组件化建模实例","title":"组件化建模实例","text":"","category":"page"},{"location":"Optimization/参数辨识实例_MTK/#MTK非线性参数辨识实例","page":"MTK非线性参数辨识实例","title":"MTK非线性参数辨识实例","text":"","category":"section"},{"location":"Optimization/参数辨识实例_MTK/","page":"MTK非线性参数辨识实例","title":"MTK非线性参数辨识实例","text":"tip: Tip\nContents：参数辨识、优化、MTKContributor: YJYEmail:522432938@qq.com如有错误，请批评指正。","category":"page"},{"location":"Optimization/参数辨识实例_MTK/","page":"MTK非线性参数辨识实例","title":"MTK非线性参数辨识实例","text":"note: Note\nMTK = ModelingToolkit.jlNLP = NonlinearnProblem，非线性问题OptimizationSystem为MTK中的系统类型之一","category":"page"},{"location":"Optimization/参数辨识实例_MTK/#参数辨识概念","page":"MTK非线性参数辨识实例","title":"参数辨识概念","text":"","category":"section"},{"location":"Optimization/参数辨识实例_MTK/","page":"MTK非线性参数辨识实例","title":"MTK非线性参数辨识实例","text":"系统中的参数作为优化变量，找到一组参数，使得通过模型计算结果与实际值误差最小，实际值一般为一系列数值。参数辨识本质为回归问题。数学表达如下：","category":"page"},{"location":"Optimization/参数辨识实例_MTK/","page":"MTK非线性参数辨识实例","title":"MTK非线性参数辨识实例","text":"y = f(ab)\r\nmin (y_real - y)^2","category":"page"},{"location":"Optimization/参数辨识实例_MTK/#实例","page":"MTK非线性参数辨识实例","title":"实例","text":"","category":"section"},{"location":"Optimization/参数辨识实例_MTK/","page":"MTK非线性参数辨识实例","title":"MTK非线性参数辨识实例","text":"考虑下面的模型：","category":"page"},{"location":"Optimization/参数辨识实例_MTK/","page":"MTK非线性参数辨识实例","title":"MTK非线性参数辨识实例","text":"y = ax^2+sin(bx)a=15b=08","category":"page"},{"location":"Optimization/参数辨识实例_MTK/","page":"MTK非线性参数辨识实例","title":"MTK非线性参数辨识实例","text":"采用生成数据的方法构造真实的数据y_real。 方法为通过模型计算出准确值并加上随机误差。","category":"page"},{"location":"Optimization/参数辨识实例_MTK/","page":"MTK非线性参数辨识实例","title":"MTK非线性参数辨识实例","text":"##### 生成真实数据 ####\r\nx = collect(-1:0.01:1)\r\nN = length(x)\r\n# 产生随机误差，范围在-0.1~0.1之间\r\nrands = rand(-0.1:0.01:0.1, N)\r\na1 = 1.5\r\na2 = 0.8\r\n# 计算y值\r\ny = @. a1 * x^2 + sin(a2 * x) + rands\r\n","category":"page"},{"location":"Optimization/参数辨识实例_MTK/","page":"MTK非线性参数辨识实例","title":"MTK非线性参数辨识实例","text":"因为测试数据集y_real本身即来自模型，同时添加的扰动范围不大，可以认为数据集的内涵就是模型y = ax^2+sin(bx) 接下来构建问题并且求解：","category":"page"},{"location":"Optimization/参数辨识实例_MTK/","page":"MTK非线性参数辨识实例","title":"MTK非线性参数辨识实例","text":"# 计算损失Loss\r\n@variables para[1:2]\r\nerrors = @. (para[1] * x^2 + sin(para[2] * x) - y)^2\r\n\r\n# 计算方差和，采用均方差亦可\r\nLoss = sum(errors)\r\n\r\n# 构建问题并求解\r\n@named sys = OptimizationSystem(Loss, [para[i] for i in 1:2], [])\r\na0 = [0.1,0.1]\r\nprob = OptimizationProblem(sys, a0, [], grad=true, hess=true, reltol=1e-8, abstol=1e-8)\r\ns = solve(prob, Optim.Newton())","category":"page"},{"location":"Optimization/参数辨识实例_MTK/","page":"MTK非线性参数辨识实例","title":"MTK非线性参数辨识实例","text":"最后的结果为:","category":"page"},{"location":"Optimization/参数辨识实例_MTK/","page":"MTK非线性参数辨识实例","title":"MTK非线性参数辨识实例","text":"u: 2-element Vector{Float64}:\r\n 1.502064883762093\r\n 0.7908724806965902","category":"page"},{"location":"Optimization/参数辨识实例_MTK/","page":"MTK非线性参数辨识实例","title":"MTK非线性参数辨识实例","text":"和我们的真实值a=15b=08比较接近。 优化成功！","category":"page"},{"location":"Optimization/参数辨识实例_MTK/","page":"MTK非线性参数辨识实例","title":"MTK非线性参数辨识实例","text":"tip: Tip\n影响优化效果的因素有初值\n生成扰动大小可以尝试修改它们并查看求解效果。","category":"page"},{"location":"Optimization/参数辨识实例_MTK/","page":"MTK非线性参数辨识实例","title":"MTK非线性参数辨识实例","text":"全部代码：","category":"page"},{"location":"Optimization/参数辨识实例_MTK/","page":"MTK非线性参数辨识实例","title":"MTK非线性参数辨识实例","text":"using ModelingToolkit, GalacticOptim, Optim\r\nLoss = 0.0\r\n#number of samples\r\nypre = 0\r\n#y-predict\r\nx = collect(-1:0.01:1)\r\nN = length(x)\r\nrands = rand(-0.1:0.01:0.1, N)\r\na1 = 1.5\r\na2 = 0.8\r\ny = @. a1 * x^2 + sin(a2 * x) + rands\r\n\r\n\r\n@variables para[1:2]\r\nerrors = @. (para[1] * x^2 + sin(para[2] * x) - y)^2\r\nLoss = sum(errors)\r\n\r\n#Opt\r\n@named sys = OptimizationSystem(Loss, [para[i] for i in 1:2], [])\r\na0 = [0.1, 0.1]\r\nprob = OptimizationProblem(sys, a0, [], grad=true, hess=true, reltol=1e-8, abstol=1e-8)\r\ns = solve(prob, Optim.Newton())","category":"page"},{"location":"CS Base/julia_change_pkgserve/#Julia换源(更换国内镜像站)","page":"Julia换源(更换国内镜像站)","title":"Julia换源(更换国内镜像站)","text":"","category":"section"},{"location":"CS Base/julia_change_pkgserve/","page":"Julia换源(更换国内镜像站)","title":"Julia换源(更换国内镜像站)","text":"tip: Tip\nContents：JuliaPkgContributor: YJYEmail:522432938@qq.com如有错误，请批评指正。","category":"page"},{"location":"CS Base/julia_change_pkgserve/","page":"Julia换源(更换国内镜像站)","title":"Julia换源(更换国内镜像站)","text":"打开julia的安装路径，找到文件夹 julia-1.x.x(如1.6.1) 如图","category":"page"},{"location":"CS Base/julia_change_pkgserve/","page":"Julia换源(更换国内镜像站)","title":"Julia换源(更换国内镜像站)","text":"(Image: 在这里插入图片描述)","category":"page"},{"location":"CS Base/julia_change_pkgserve/","page":"Julia换源(更换国内镜像站)","title":"Julia换源(更换国内镜像站)","text":"进入该文件夹找到etc","category":"page"},{"location":"CS Base/julia_change_pkgserve/","page":"Julia换源(更换国内镜像站)","title":"Julia换源(更换国内镜像站)","text":"(Image: 在这里插入图片描述)","category":"page"},{"location":"CS Base/julia_change_pkgserve/","page":"Julia换源(更换国内镜像站)","title":"Julia换源(更换国内镜像站)","text":"进入etc 再进入一个文件夹，有一个startup.jl","category":"page"},{"location":"CS Base/julia_change_pkgserve/","page":"Julia换源(更换国内镜像站)","title":"Julia换源(更换国内镜像站)","text":"(Image: 在这里插入图片描述) 这个startup.jl就很方便了，在启动julia的时候，会首先自动运行里面的内容","category":"page"},{"location":"CS Base/julia_change_pkgserve/","page":"Julia换源(更换国内镜像站)","title":"Julia换源(更换国内镜像站)","text":"所以，打开它，在里面输入一行","category":"page"},{"location":"CS Base/julia_change_pkgserve/","page":"Julia换源(更换国内镜像站)","title":"Julia换源(更换国内镜像站)","text":"ENV[\"JULIA_PKG_SERVER\"]=\"https://mirrors.bfsu.edu.cn/julia/static\"","category":"page"},{"location":"CS Base/julia_change_pkgserve/","page":"Julia换源(更换国内镜像站)","title":"Julia换源(更换国内镜像站)","text":"就像这样 (Image: 在这里插入图片描述) 保存就完事了。","category":"page"},{"location":"CS Base/julia_change_pkgserve/","page":"Julia换源(更换国内镜像站)","title":"Julia换源(更换国内镜像站)","text":"ENV是julia的全局环境变量，能够直接在repl中修改环境变量，但不是永久的。所以放在startup.jl里。这样等价于永久改变了，因为每次启动都会repl自动执行它。","category":"page"},{"location":"CS Base/julia_change_pkgserve/","page":"Julia换源(更换国内镜像站)","title":"Julia换源(更换国内镜像站)","text":"在repl中输入ENV如下： (Image: 在这里插入图片描述)","category":"page"},{"location":"CS Base/julia_change_pkgserve/","page":"Julia换源(更换国内镜像站)","title":"Julia换源(更换国内镜像站)","text":"妙啊！","category":"page"},{"location":"CS Base/julia_change_pkgserve/","page":"Julia换源(更换国内镜像站)","title":"Julia换源(更换国内镜像站)","text":"还有一些其它的比如LOADPATH 和DEPOTPATH等等，这些都是环境变量。更多可以看中文文档 (Image: 在这里插入图片描述)","category":"page"},{"location":"CS Base/julia_change_pkgserve/","page":"Julia换源(更换国内镜像站)","title":"Julia换源(更换国内镜像站)","text":"PS：这是北外的镜像站，目前julia的镜像站中最好用的一个，基本没有报错！","category":"page"},{"location":"Tools/CoolProp/#CoolProp使用介绍","page":"CoolProp使用介绍","title":"CoolProp使用介绍","text":"","category":"section"},{"location":"Tools/CoolProp/","page":"CoolProp使用介绍","title":"CoolProp使用介绍","text":"tip: Tip\nContents：CoolPropContributor: YJYEmail:522432938@qq.com如有错误，请批评指正。","category":"page"},{"location":"Tools/CoolProp/","page":"CoolProp使用介绍","title":"CoolProp使用介绍","text":"note: Note\nCoolProp为开源物性包。 Unitful.jl为计算单位的包","category":"page"},{"location":"Tools/CoolProp/#CoolProp是什么","page":"CoolProp使用介绍","title":"CoolProp是什么","text":"","category":"section"},{"location":"Tools/CoolProp/","page":"CoolProp使用介绍","title":"CoolProp使用介绍","text":"这是一个开源的调用物性包，通过几行代码就可以很容易的调用流体的物性，对于需要进行工程计算的小伙伴很有帮助！因为使用这个包之后，就可以可以省去大量查表的麻烦！","category":"page"},{"location":"Tools/CoolProp/#Python使用CoolProp","page":"CoolProp使用介绍","title":"Python使用CoolProp","text":"","category":"section"},{"location":"Tools/CoolProp/#.CoolProp安装","page":"CoolProp使用介绍","title":"1.CoolProp安装","text":"","category":"section"},{"location":"Tools/CoolProp/","page":"CoolProp使用介绍","title":"CoolProp使用介绍","text":"打开cmd命令行，输入","category":"page"},{"location":"Tools/CoolProp/","page":"CoolProp使用介绍","title":"CoolProp使用介绍","text":"pip install CoolProp","category":"page"},{"location":"Tools/CoolProp/","page":"CoolProp使用介绍","title":"CoolProp使用介绍","text":"即可安装完成 (Image: 图1)","category":"page"},{"location":"Tools/CoolProp/#.-使用示例","page":"CoolProp使用介绍","title":"2. 使用示例","text":"","category":"section"},{"location":"Tools/CoolProp/","page":"CoolProp使用介绍","title":"CoolProp使用介绍","text":"import CoolProp.CoolProp as CP\r\n\r\na = CP.PropsSI('H','P',1.0E6,'T',500,'Water')\r\n\r\n#H代表输出的需要查找的参数，H为焓\r\n#P为压强，T为温度，第二个和第四个参数就是状态\r\n#这个例子就是查询1MPa气压与500K的温度下，水蒸气的焓（如果是液体的话就是液体性质）\r\n\r\nprint(a)\r\n","category":"page"},{"location":"Tools/CoolProp/","page":"CoolProp使用介绍","title":"CoolProp使用介绍","text":"查询时，输入任意两个参数，就能够查询第三个参数。 具体的属性为可以看下表","category":"page"},{"location":"Tools/CoolProp/","page":"CoolProp使用介绍","title":"CoolProp使用介绍","text":"状态量 参数名称 单位\n比焓 H J/kg\n比熵 S J/mol/K\n压强 P Pa\n温度 T K\n密度 D kg/m^3","category":"page"},{"location":"Tools/CoolProp/","page":"CoolProp使用介绍","title":"CoolProp使用介绍","text":"","category":"page"},{"location":"Tools/CoolProp/","page":"CoolProp使用介绍","title":"CoolProp使用介绍","text":"更多参数，可以查看官网文档。","category":"page"},{"location":"Tools/CoolProp/#Julia使用Coolprop","page":"CoolProp使用介绍","title":"Julia使用Coolprop","text":"","category":"section"},{"location":"Tools/CoolProp/","page":"CoolProp使用介绍","title":"CoolProp使用介绍","text":"在2022的2月，Coolprop完成了Julia包的更新。可以直接在Julia中调用，而不需要通过python了！","category":"page"},{"location":"Tools/CoolProp/","page":"CoolProp使用介绍","title":"CoolProp使用介绍","text":"using Pkg\r\nPkg.add(\"CoolProp\")\r\n\r\nusing CoolProp\r\nPropsSI(\"T\", \"P\", 101325.0, \"Q\", 0.0, \"Water\")\r\n373.1242958476844","category":"page"},{"location":"Tools/CoolProp/","page":"CoolProp使用介绍","title":"CoolProp使用介绍","text":"在Julia中支持单位处理包——Unitful","category":"page"},{"location":"Tools/CoolProp/","page":"CoolProp使用介绍","title":"CoolProp使用介绍","text":"using CoolProp\r\nusing Unitful: °C, Pa\r\n\r\nPropsSI(\"P\", \"T\", 100°C, \"Q\", 0.0, \"Water\")\r\n101417.99665788244 Pa","category":"page"},{"location":"Optimization/systemParaEste/#MTK符号系统参数辨识","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"","category":"section"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"tip: Tip\nContents：MTK模型、优化、DiffEqParamEstimContributor: YJYEmail:522432938@qq.com如有错误，请批评指正。","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"note: Note\nDEPE = DiffEqParamEstim.jl(Differential Equation Parameters Estimate)DiffEqParamEstim.jl是计算微分方程参数估计的软件包。","category":"page"},{"location":"Optimization/systemParaEste/#原理","page":"MTK符号系统参数辨识","title":"原理","text":"","category":"section"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"MTK与DE在问题层面具有一致性。MTK是符号处理的软件包，问题的求解仍然推给DE。而DEPE是从DE的problem层面构建的参数优化问题，所以使用MTK进行建模后，依然可以使用DEPE进行参数估计。对于DEPE来说，不管是MTK还是DE，它接受的问题都是DE的Problem。所以，不管是使用MTK还是DE构建模型，到DEPE这一层面都是贯通的。","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"下面以RC电路模型为例，进行电路中正弦电压源的电压值估计。","category":"page"},{"location":"Optimization/systemParaEste/#RC组件建模","page":"MTK符号系统参数辨识","title":"RC组件建模","text":"","category":"section"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"基于ModelingToolkit，建立RC电路模型，模型如下图所示。这是一个震荡电路 (Image: 在这里插入图片描述)","category":"page"},{"location":"Optimization/systemParaEste/#构建组件","page":"MTK符号系统参数辨识","title":"构建组件","text":"","category":"section"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"首先完成电路模型的组件编写，一共有5个组件，分别是电源、电阻、电容、电感、接地","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"using ModelingToolkit, Plots, DifferentialEquations\r\n\r\n@variables t\r\n@connector function Pin(; name)\r\n    sts = @variables v(t) = 1.0 i(t) = 1.0 [connect = Flow]\r\n    ODESystem(Equation[], t, sts, []; name=name)\r\nend\r\n\r\nfunction Ground(; name)\r\n    @named g = Pin()\r\n    eqs = [g.v ~ 0]\r\n    compose(ODESystem(eqs, t, [], []; name=name), g)\r\nend\r\n\r\nfunction OnePort(; name)\r\n    @named p = Pin()\r\n    @named n = Pin()\r\n    sts = @variables v(t) = 1.0 i(t) = 1.0\r\n    eqs = [\r\n        v ~ p.v - n.v\r\n        0 ~ p.i + n.i\r\n        i ~ p.i\r\n    ]\r\n    compose(ODESystem(eqs, t, sts, []; name=name), p, n)\r\nend\r\n\r\nfunction Resistor(; name, R=1.0)\r\n    @named oneport = OnePort()\r\n    @unpack v, i = oneport\r\n    ps = @parameters R = R\r\n    eqs = [\r\n        v ~ i * R\r\n    ]\r\n    extend(ODESystem(eqs, t, [], ps; name=name), oneport)\r\nend\r\n\r\nfunction Capacitor(; name, C=1.0)\r\n    @named oneport = OnePort()\r\n    @unpack v, i = oneport\r\n    ps = @parameters C = C\r\n    D = Differential(t)\r\n    eqs = [\r\n        D(v) ~ i / C\r\n    ]\r\n    extend(ODESystem(eqs, t, [], ps; name=name), oneport)\r\nend\r\n\r\nfunction ConstantVoltage(; name, V=1.0)\r\n    @named oneport = OnePort()\r\n    @unpack v = oneport\r\n    ps = @parameters V = V\r\n    eqs = [\r\n        V ~ v\r\n    ]\r\n    extend(ODESystem(eqs, t, [], ps; name=name), oneport)\r\nend\r\n\r\nfunction Inductor(; name, L=1.0)\r\n    @named oneport = OnePort()\r\n    @unpack v, i = oneport\r\n    ps = @parameters L = L\r\n    D = Differential(t)\r\n    eqs = [\r\n        D(i) ~ v / L\r\n    ]\r\n    extend(ODESystem(eqs, t, [], ps; name=name), oneport)\r\nend\r\n\r\nfunction ChangeableVoltage(; name)\r\n    @named oneport = OnePort()\r\n    @unpack v, i = oneport\r\n    eqs = [\r\n        v ~ 16 * sin(2π * t)\r\n    ]\r\n    extend(ODESystem(eqs, t, [], []; name=name), oneport)\r\nend","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"可以看到，系统一共定义有4个参数，分别是电阻值，电容值，电感值以及电压的最大值","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"然后，通过连接函数，组建系统","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"@named resistor = Resistor(R=3.0)\r\n@named capacitor = Capacitor(C=1.0/24)\r\n@named source = ChangeableVoltage(vol=10.0)\r\n@named inductor = Inductor(L=0.1)\r\n@named ground = Ground()\r\n\r\n\r\nrc_eqs = [\r\n          connect(source.p, capacitor.p)\r\n          connect(capacitor.n, inductor.p)\r\n          connect(inductor.n, resistor.p)\r\n          connect(source.n,resistor.n,ground.g)\r\n         ]\r\n\r\n@named _rc_model = ODESystem(rc_eqs, t)\r\n@named rc_model = compose(_rc_model,\r\n    [resistor, inductor, capacitor, source, ground])\r\n\r\nsys = structural_simplify(rc_model)\r\n\r\nusing Plots\r\nu0 = [\r\n    capacitor.v => 0.0\r\n    capacitor.p.i => 0.0\r\n    inductor.i => 0\r\n    inductor.v => 0\r\n     ]\r\nP=[3.0,1.0/24,0.1,10.0]  #系统的参数\r\nprob = ODAEProblem(sys, u0, (0, 10.0),P)\r\nsol = solve(prob, Tsit5())\r\n\r\np1 = plot(sol,vars=[capacitor.v capacitor.p.i],xlims = (0,10),ylim = (-10,15))\r\np2 = plot(sol,vars=[inductor.v inductor.i],xlims = (0,10),ylim = (-5,5))\r\nplot(p1,p2,layout=(2,1))\r\n","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"运行代码可以得到结果图： (Image: 在这里插入图片描述)","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"电容的电压电流、电感的电压电流都是震荡的。","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"初值向量P分别对应4个参数的参数值，电压值为最后一个，设定为10.0","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"在不知道参数的顺序时，可以使用parameters函数查看系统参数。","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"parameters(sys)","category":"page"},{"location":"Optimization/systemParaEste/#建立问题","page":"MTK符号系统参数辨识","title":"建立问题","text":"","category":"section"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"为了能够模拟参数辨识，给其中一个变量加上扰动（这里依旧采用手动生成数据的思想，可能保证模型与数据匹配）。可以使用states函数查看系统变量（在组件设计过程中定义的）。","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"states(sys)","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"这里对两个变量都添加扰动。","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"using RecursiveArrayTools\r\nt = collect(range(0,stop=10,length=1000)) # 建立时间向量\r\nrandomized = VectorOfArray([(sol(t[i]) + .5randn(2)) for i in 1:length(t)])\r\ndata = convert(Array,randomized)  ","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"对sol的结果，选取了1000个点作为样本点加入扰动。","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"加入的扰动的方式是：通过生成绝对值小于0.5的随机数加入到从sol中选取出来的样本点中去，将其作为需要参数辨识的样本数据。","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"看一看扰动生成的结果：","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"p1=plot(t,data[1,:],ylim=(-8,8))\r\np1=plot!(t,data[2,:],ylim=(-8,8))\r\np2=plot(sol,vars=[inductor.i,capacitor.v],ylim=(-8,8))\r\nplot(p1,p2,layout=(2,1))","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"产生的结果图为： (Image: 在这里插入图片描述)","category":"page"},{"location":"Optimization/systemParaEste/#辨识过程","page":"MTK符号系统参数辨识","title":"辨识过程","text":"","category":"section"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"参数辨识使用DiffEqParamEstim，","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"using DiffEqParamEstim\r\ncost_function = build_loss_objective(prob,Tsit5(),\r\nL2Loss(t,data),maxiters=10000,verbose=false)","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"通过buildlossobjective建立了辨识模型，即通过该函数可以求处理后的样本点与模型计算结果的方差和（L2Loss），当然方差和只是作为拟合的评价指标之一，可以选取不同的函数或者构建不同的指标。","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"接下来，看一看不同的电压值，带来的方差和的变化。","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"vals = 0:0.1:20.0\r\nplot(vals,[cost_function([3.0,1.0/24,0.1,i]) for i in vals],yscale=:log10,\r\n     xaxis = \"Parameter\", yaxis = \"Cost\", title = \"1-Parameter Cost Function\",\r\n     lw = 3)","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"val为从0开始，到20，步长为0.1。对这些电压值，去匹配模型，算出来的与样本值的方差和会不同。","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"结果为： (Image: 在这里插入图片描述)","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"可以看到，在10.0的地方，方差和最小（因为设定的值就是10.0，扰动是在此基础之上叠加的）。说明辨识结果有效。","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"以上是通过“肉眼”观察的出来的结果。科学的方法是求一组参数，使得方差和最小。这是一个最优化问题。使用Optim","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"using Optim\r\nresult = optimize(cost_function, [3.0,1.0/24,0.1,15])\r\nresult.minimizer","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"将电压的初始值设为15去寻优，得到的结果为：","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"4-element Vector{Float64}:\r\n 2.975801390547115\r\n 0.04266590691854741\r\n 0.09999565290932136\r\n 9.923607580088433","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"和真实值是非常接近的！寻优有效！","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"也可以将4个初始值都改变去寻优。","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"result = optimize(cost_function, [2.0,0.1,0.5,16])\r\nresult.minimizer","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"得到的结果也很好","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"4-element Vector{Float64}:\r\n 2.972037379476059\r\n 0.04300492580277582\r\n 0.09998659716890046\r\n 9.911215185371102","category":"page"},{"location":"Optimization/systemParaEste/","page":"MTK符号系统参数辨识","title":"MTK符号系统参数辨识","text":"note: Note\n该参数辨识仍然是优化问题的子集，选择不同的初值很可能得到不同的结果。","category":"page"},{"location":"Tools/CSV_jl_use/#CVS.jl使用简介","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"","category":"section"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"tip: Tip\nContents：CSV文本读入Contributor: YJYEmail:522432938@qq.com如有错误，请批评指正。","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"note: Note\nCSV.jl是一个快速灵活的纯 Julia包，用于处理带分隔符的文本文件。","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"在建立模型与模型计算的过程中，可以很好的解决数据导入问题，它能自动辨识文本数据类型，并将数据分隔。","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"它的应用场景是：使用数据之前的输入导入。","category":"page"},{"location":"Tools/CSV_jl_use/#基本实现","page":"CVS.jl使用简介","title":"基本实现","text":"","category":"section"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"文件内容：","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"col1,col2,col3,col4,col5,col6,col7,col8\r\n,1,1.0,1,one,2019-01-01,2019-01-01T00:00:00,true\r\n,2,2.0,2,two,2019-01-02,2019-01-02T00:00:00,false\r\n,3,3.0,3.14,three,2019-01-03,2019-01-03T00:00:00,true","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"使用以下代码导入文件","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"CSV.File(\"data.txt\") #file为文件名，如\"data.csv\"、\"data.txt\"","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"默认情况下，CSV.File会自动检测这个文件的分隔符','，以及每列的类型。默认情况下，它将“空字段”视为missing（本示例中的整个第一列）。它还自动处理提升类型，例如第 4 列，其中前两个值为Int，但第 3 行具有Float64值 ( 3.14)。","category":"page"},{"location":"Tools/CSV_jl_use/#自定义分隔符","page":"CVS.jl使用简介","title":"自定义分隔符","text":"","category":"section"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"文件内容：","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"col1::col2\r\n1::2\r\n3::4","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"使用以下代码导入文件","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"CSV.File(\"data.txt\"; delim=\"::\")","category":"page"},{"location":"Tools/CSV_jl_use/#无标题情况","page":"CVS.jl使用简介","title":"无标题情况","text":"","category":"section"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"文件内容：","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"1,2,3\r\n4,5,6\r\n7,8,9","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"在没有标题的情况下，会默认把第一行当作标题，可以给定参数取消，使用以下代码导入文件","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"CSV.File(\"data.txt\"; header=false) #取消标题","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"或者也可以手动给定标题","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"CSV.File(\"data.txt\"; header=[\"col1\", \"col2\", \"col3\"]) #手动给定标题","category":"page"},{"location":"Tools/CSV_jl_use/#指定数据行数","page":"CVS.jl使用简介","title":"指定数据行数","text":"","category":"section"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"文件内容：","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"col1,col2,col3\r\nmetadata1,metadata2,metadata3\r\nextra1,extra2,extra3\r\n1,2,3\r\n4,5,6\r\n7,8,9","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"假如我们期望的内容是从第四行开始，可以使用以下代码","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"CSV.File(\"data.txt\"; skipto=4) #从第四行开始","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"或者","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"CSV.File(\"data.txt\"; datarow=4)","category":"page"},{"location":"Tools/CSV_jl_use/#读取数据段","page":"CVS.jl使用简介","title":"读取数据段","text":"","category":"section"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"文件内容：","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"col1,col2,col3\r\n1,2,3\r\n4,5,6\r\n7,8,9\r\n10,11,12\r\n13,14,15\r\n16,17,18\r\n19,20,21","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"只需要读入某一段数据段","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"CSV.File(\"data.txt\"; skipto=4，limit=1) #从第四行开始,读取1行","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"或者","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"CSV.File(\"data.txt\"; skipto=4，footerskip=1) #从第四行开始,除去最后一行","category":"page"},{"location":"Tools/CSV_jl_use/#转置","page":"CVS.jl使用简介","title":"转置","text":"","category":"section"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"文件内容：","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"col1,1,2,3\r\ncol2,4,5,6\r\ncol3,7,8,9","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"用如下代码导入","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"CSV.File(\"data.txt\"; transpose=true) #从第四行开始,读取1行","category":"page"},{"location":"Tools/CSV_jl_use/#数据操作","page":"CVS.jl使用简介","title":"数据操作","text":"","category":"section"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"我们以一下文件输入为例：","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"col1,col2,col3\r\n1,2,3\r\n4,5,6\r\n7,8,9\r\n10,11,12\r\n13,14,15\r\n16,17,18\r\n19,20,21","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"用如下代码导入","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"data = CSV.File(\"data.txt\") ","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"现在相当于把数据储存到变量data中了，data是CSV.File类型的数据，可以通过typeof函数来查看一下：","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"typeof(data)","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"现在调用某一列的数字：","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"println(data.col1) #显示第一列\r\nprintln(data.col2) #显示第二列\r\nprintln(data.col3) #显示第三列","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"它的结果是：","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"[1, 4, 7, 10, 13, 16, 19]","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"[2, 5, 8, 11, 14, 17, 20]","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"[3, 6, 9, 12, 15, 18, 21]","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"查看一列的数据类型","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"typeof(data.col1)","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"它的结果是：","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"Vector{Int64}","category":"page"},{"location":"Tools/CSV_jl_use/#小结","page":"CVS.jl使用简介","title":"小结","text":"","category":"section"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"可以发现，data是CSV.File类型，但是通过data调用的每一列数据是vector类型","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"说明可以把每一列当作平常的vector来处理，相关的方法都能够匹配。","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"比如：","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"sum(data.col1)\r\na = data.col1 .* data.col2","category":"page"},{"location":"Tools/CSV_jl_use/","page":"CVS.jl使用简介","title":"CVS.jl使用简介","text":"tip: Tip\n推荐一个好用的数据展示包DataFrames，它一般与CSV.jl结合起来使用在julia的包模式下安装：add DataFrames将data漂亮的输出，只需要：using DataFrames\r\ndisplay(DataFrame(data))","category":"page"},{"location":"Simulation/steadyRC/#MTK稳态系统仿真实例","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"","category":"section"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"tip: Tip\nContents：MTK、组件化建模Contributor: YJYEmail:522432938@qq.com如有错误，请批评指正。","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"note: Note\nMTK = ModelingToolkit.jlModelingToolkit.jl Acausal Component-Based Modeling the RC Circuit介绍了组件化建模的例子","category":"page"},{"location":"Simulation/steadyRC/#动态与瞬态","page":"MTK稳态系统仿真实例","title":"动态与瞬态","text":"","category":"section"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"从内涵来说，稳态问题是动态问题的子集。","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"对于稳态动态问题，当微分代数方程中对时间项的微分为0时，则由动态问题过渡为稳态问题。也就是说，稳态问题是动态问题的特殊形式，动态问题是问题的一般形式。微分在实际中代表着“变化”，当该“变化”项为0时，意味着“变化”停止，此时则进入了稳态阶段。","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"例如，对于这样一个问题：","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"fracdxdt = 1-xx_0=0","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"从物理演化的角度看，初始时刻，x的变化率为1，x将会不断增大。系统发展到最后，当x增大到1的时候。fracdxdt=0，此时此刻变化就停止了。所以x将进入稳态，即x=1。","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"这是因为，从物理的角度理解，微分代表一种变化趋势！上述方程的走势如下图，与分析的情况一致。","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"(Image: 图 1)  ","category":"page"},{"location":"Simulation/steadyRC/#MTK的稳态求解技巧","page":"MTK稳态系统仿真实例","title":"MTK的稳态求解技巧","text":"","category":"section"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"求解以下稳态电路问题：","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"(Image: 图 4)  ","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"该问题的电路状态是确定值，不随时间而改变。而DE和MTK处理的是关于时间的微分方程，单纯的代数方程无法求解。对于这样稳态问题，应该怎样求解呢？","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"这里主要运用一个技巧——设定一个变化为0的量加入到方程中。","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"什么意思呢？问题必须含有关于时间微分的微分方程，在这一基础之上，让fracdxdt=0不就实现了一种稳态么?x可以代表任何变量，电阻值、电源电压值、电流源值等等。于是，微分变为一种形式，只是让问题能够被求解器求解，对于问题的内涵并没有任何改变。","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"@MTK版本：8.5.5","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"using ModelingToolkit, Plots, DifferentialEquations\r\n\r\n@variables t\r\n@connector function Pin(; name)\r\n    sts = @variables v(t) = 1.0 i(t) = 1.0 [connect = Flow]\r\n    ODESystem(Equation[], t, sts, []; name=name)\r\nend\r\n\r\nfunction Ground(; name)\r\n    @named g = Pin()\r\n    eqs = [g.v ~ 0]\r\n    compose(ODESystem(eqs, t, [], []; name=name), g)\r\nend\r\n\r\nfunction GroundDIFF(; name)\r\n    @named g = Pin()\r\n    sts = @variables v(t)\r\n    D = Differential(t)\r\n    eqs = [\r\n        g.v ~ 0,\r\n        D(v) ~ 0\r\n    ]\r\n    compose(ODESystem(eqs, t, sts, []; name=name), g)\r\nend\r\n\r\nfunction OnePort(; name)\r\n    @named p = Pin()\r\n    @named n = Pin()\r\n    sts = @variables v(t) = 1.0 i(t) = 1.0\r\n    eqs = [\r\n        v ~ p.v - n.v\r\n        0 ~ p.i + n.i\r\n        i ~ p.i\r\n    ]\r\n    compose(ODESystem(eqs, t, sts, []; name=name), p, n)\r\nend\r\n\r\nfunction Resistor(; name, R=1.0)\r\n    @named oneport = OnePort()\r\n    @unpack v, i = oneport\r\n    ps = @parameters R = R\r\n    eqs = [\r\n        v ~ i * R\r\n    ]\r\n    extend(ODESystem(eqs, t, [], ps; name=name), oneport)\r\nend\r\n\r\nfunction ConstantVoltage(; name, V=1.0)\r\n    @named oneport = OnePort()\r\n    @unpack v = oneport\r\n    ps = @parameters V = V\r\n    eqs = [\r\n        V ~ v\r\n    ]\r\n    extend(ODESystem(eqs, t, [], ps; name=name), oneport)\r\nend\r\n\r\nfunction ConstantCurrent(; name, I=1.0)\r\n    @named oneport = OnePort()\r\n    @unpack i = oneport\r\n    ps = @parameters I = I\r\n    # D = Differential(t)\r\n    eqs = [\r\n        i ~ I\r\n    ]\r\n    extend(ODESystem(eqs, t, [], ps; name=name), oneport)\r\nend\r\n\r\n\r\n@named resistor1 = Resistor(R=5.0)\r\n@named resistor2 = Resistor(R=5.0)\r\n@named resistor3 = Resistor(R=30.0)\r\n@named resistor4 = Resistor(R=20.0)\r\n@named Isource = ConstantCurrent()\r\n@named Vsource1 = ConstantVoltage(V=30.0)\r\n@named Vsource2 = ConstantVoltage(V=5.0)\r\n@named ground = GroundDIFF()\r\n\r\n\r\nrc_eqs = [\r\n    connect(Vsource1.p, resistor1.p)\r\n    connect(resistor1.n, resistor2.p, Isource.p)\r\n    connect(resistor2.n, resistor3.p, resistor4.p)\r\n    connect(resistor4.n, Isource.n, Vsource2.p)\r\n    connect(Vsource1.n, Vsource2.n, resistor3.n, ground.g)\r\n]\r\n\r\n@named _rc_model = ODESystem(rc_eqs, t)\r\n@named rc_model = compose(_rc_model,\r\n    [resistor1, resistor2, resistor3, resistor4,\r\n        Isource, Vsource1, Vsource2, ground])\r\n\r\nsys = structural_simplify(rc_model)\r\n\r\nusing Plots\r\n\r\nu0 = [\r\n    ground.v => 0.0\r\n]\r\nprob = ODAEProblem(sys, u0, (0, 10.0))\r\nsol = solve(prob, Tsit5())\r\nobserved(sys)\r\nplot(sol[resistor4.n.i])\r\n","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"代码中的关键在于函数GroundDIFF()，这个函数中添加的微分项为电势变化为0，即","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"$","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"\\frac{dV}{dt} = 0 $","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"并且这个V没有任何意义，既不是接地的电势，也没有和电路中的任何变量产生关联。它只是为了让问题能够被求解而存在。","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"最后求解的结果为：","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"(Image: 图 1)  ","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"可以看到，求解的结果在时间轴上是不变的。随然问题看似是一个动态问题，本质上其实是稳态。因为其没有任何改变，时间轴上的任何状态与其前后状态都一样。","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"思想的核心其实就是——稳态是动态的一个子集，当动态过程中状态不再改变则进入稳态。这里不过是将问题设置为状态不发生变化的动态，其本质就是稳态。","category":"page"},{"location":"Simulation/steadyRC/","page":"MTK稳态系统仿真实例","title":"MTK稳态系统仿真实例","text":"tip: Tip\n稳态电路本质是代数方程组，若加上了微分方程，则变成了微分代数方程组。代码中定义的问题是ODAEProblem而不是ODEProblem。DE只有求解微分代数方程的接口而没有求解代数方程的接口。所以需要构造成微分代数问题。","category":"page"},{"location":"Optimization/DE_Estim/#微分方程参数辨识实例","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"","category":"section"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"tip: Tip\nContents：微分方程参数辨识、优化、DiffEqParamEstimContributor: YJYEmail:522432938@qq.com如有错误，请批评指正。","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"note: Note\nDEPE = DiffEqParamEstim.jl(Differential Equation Parameters Estimate)DiffEqParamEstim.jl是计算微分方程参数估计的软件包。","category":"page"},{"location":"Optimization/DE_Estim/#微分方程参数辨识问题","page":"微分方程参数辨识实例","title":"微分方程参数辨识问题","text":"","category":"section"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"在JuMP非线性参数辨识实例与MTK非线性参数辨识实例中介绍了参数辨识问题的形式与求解工具。求解的问题的数学形式为一般方程：","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"y = ax^2+sin(bx)a=15b=08","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"DEPE则是针对另外一种数学形式进行参数辨识求解的工具包——微分方程形式。例如，如下问题：","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"fracdydt = at^2+sin(bt)a=15b=08","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"对于这样一个微分问题。假设我们并不知道参数ab的值是多少。同样只能过实验和测量获得对应时间点上y的观测值。参数辨识需要解决的问题是：根据t，y观测值。反推出ab的值。与前面解决的问题不同的是，它是微分方程形式。相同的是，它们的核心逻辑是“优化”。","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"要求解这样一个含有微分方程的参数辨识问题，可以很自然地想到：将微分方程的原函数求出来，再进行常规方程的参数辨识，问题就解决了。但是这有一个前提——能够求出原函数。","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"DEPE的解决方式是，直接将微分方程离散，通过离散后的节点直接构造优化问题，进行求解。这样就避免了求解原函数问题。","category":"page"},{"location":"Optimization/DE_Estim/#离散的概念","page":"微分方程参数辨识实例","title":"离散的概念","text":"","category":"section"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"离散是微分方程数值解法中的一个概念。例如，求解：fracdydt = ytin(01)","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"具体的方法是在tin(01)选特定步长的点，假如选定步长为0.1，那么有：","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"t_0=0t_1=01t_2=02t_10=10","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"同时，对于函数y，有","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"y_n-y_n-1 = y_n-1 * 01nin01210","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"所以，对于微分方程问题，就转为了求y_0至y_10的值，也就是求出具体时间点上的函数值。问题就由一个连续的方程变成了有限个点上的函数值，这个过程就成为离散。","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"数值求解算法的精度与离散的方法有紧密关系。上面的离散方式可以换成：","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"y_n-y_n-1 = y_n * 01nin01210","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"区别不过不过是等式右端取y_n-1还是y_n的区别。但却是两种不同的方法——向前与向后差分，求解的精度也不一样。","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"此外，求解的精度还与步长等因素相关。更多理论，可以查阅《数值分析》一书。","category":"page"},{"location":"Optimization/DE_Estim/#微分参数辨识的优化表达","page":"微分方程参数辨识实例","title":"微分参数辨识的优化表达","text":"","category":"section"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"回到问题fracdydt = at^2+sin(bt)，已知系列观测值：y_real那么优化问题的数学表达为：","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"undersetabminsum_i=0^n(y_reali-y_i)^2sthspace5mmy_i+1-y_i=at_i^2+sin(bt_i)","category":"page"},{"location":"Optimization/DE_Estim/#加热器实例","page":"微分方程参数辨识实例","title":"加热器实例","text":"","category":"section"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"现有一个加热系统，由加热器、温度传感器、散热器构成。那么其控制方程为：","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"mcfracdTdt=(-Sh(T-T_out)+Q)*u(t-t_0)","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"可以简单理解为：","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"温度变化=加热-散热*延迟函数","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"经过化简之后：","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"beginarrayc\r\nfracd Td t=left(-fracTa+fracbaright) * u(t-c) \r\nu(t-c)=f(x)=leftbeginarrayll\r\n0  x0 1  x geq 0endarrayrightendarray","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"参数辨识的目标是辨识出a，b，c。","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"数据（数据在文档最后，以CSV文件格式保存到julia程序文件夹即可）的第二列中为加热功率，在方程模型中我们做了简化。由于功率只有0和100，在方程中我们简化为开关延时函数。所以第二列的原始数据后面并没有使用。","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"首先，实际的曲线如下：","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"using CSV,DataFrames,Plots\r\ndata = CSV.read(\"./codetest/data.csv\",DataFrame)\r\n########根据第一列与第三列数据画出图像#########\r\nplot(data[:,1],data[:,3]) ","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"(Image: 图 1)  ","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"使用DE作为建模基础建立方程：","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"using DifferentialEquations\r\nfunction fun(a)\r\n    if a>=0\r\n        1\r\n    else\r\n        0\r\n    end\r\nend\r\nfunction ff(u,p,t)\r\n    -u * fun( t- p[3])/p[1] + p[2] * fun( t- p[3])/p[1]\r\nend","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"这里采用了简写方式，省略了du，只包含微分方程右边的部分，因为只有一个微分变量所以可以简写。\nFun表示函数u的作用，其本质是单位阶跃函数。","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"定义参数等要素：","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"u0=3.6\r\ntspan = (0.0,3000.0)\r\np = [1.0,1.0,1.0]\r\nprob = ODEProblem(ff,u0,tspan,p)","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"需要留意p的值，这里p为选定的初始值。p的最终值是需要通过优化才能得到。优化目标为找到一组p，使得Loss方程的数值最小。","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"如果按照初值p = [1.0,1.0,1.0]求解，则可以得到如下结果：","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"sol = solve(prob, Tsit5())\r\nplot(sol)","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"(Image: 图 2)  ","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"可以看到，相去甚远！说明这个初值与真实值相差很远。","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"通过DiffEqParamEstim构建优化模型：","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"using DiffEqParamEstim\r\nrealdata = data[:,3]\r\nt= data[:,1]\r\ncost_function = build_loss_objective(prob, Tsit5(), L2Loss(t, realdata),\r\n    maxiters=10000, verbose=false)","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"其中，","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"realdata是实际过程中的温度值向量\nt是实际采样过程中的温度点\nbuildlossobjective 直接构建了Loss方程，其方法是L2Loss，即差的平方和。","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"求解优化问题：","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"using Optim\r\nresult_bfgs = Optim.optimize(cost_function, [1.0, 1.0, 1.0])\r\nprint(result_bfgs.minimizer)\r\n","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"Optim.optimize就是求解器，能求cost_function的最小值。","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"得到结果：","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"(Image: 图 3)  ","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"画图测试优化结果：","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"u0=3.6\r\ntspan = (0.0,3000.0)\r\np = [779.0,49.0,-652.0]\r\nprob = ODEProblem(ff,u0,tspan,p)\r\nsol = solve(prob, Tsit5())\r\nplot(sol)","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"(Image: 图 4)  ","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"似乎结果差得有点远！","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"再次优化：这是因为初值对优化问题造成的影响。由于初值与目标相去甚远，所以结果有些出入。p[3]应该是正数。把优化初值的第三项改为正数。再次优化","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"result_bfgs = Optim.optimize(cost_function, [773.0,49.0,652.0])\r\nprint(result_bfgs.minimizer)","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"(Image: 图 5)  ","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"在这个结果下，画出来的图像如图：","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"(Image: 图 6)  ","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"这是一个让人满意的结果！","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"note: Note\n多次优化是优化中一种常见的策略。某些问题的优化结果可能是一个局部最优解，这并不代表结果是错误的。所以，当优化结果不满意时，可以选择不同的初值进行优化求解。当初值离最优值越近，结果越准确。","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"全部代码：","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"using CSV, DataFrames, Plots\r\ndata = CSV.read(\"./codetest/data.csv\", DataFrame)\r\ndata[!, 3]\r\nplot(data[:, 1], data[:, 3]) #画出图像\r\n\r\nusing DifferentialEquations\r\nfunction fun(a)\r\n    if a >= 0\r\n        1\r\n    else\r\n        0\r\n    end\r\nend\r\nfunction ff(u, p, t)\r\n    -u * fun(t - p[3]) / p[1] + p[2] * fun(t - p[3]) / p[1]\r\nend\r\n\r\nu0 = 3.6\r\ntspan = (0.0, 3000.0)\r\np = [1.0, 1.0, 1.0]\r\nprob = ODEProblem(ff, u0, tspan, p)\r\n\r\nsol = solve(prob, Tsit5())\r\nplot(sol)\r\n\r\nusing DiffEqParamEstim\r\nrealdata = data[:, 3]\r\nt = data[:, 1]\r\ncost_function = build_loss_objective(prob, Tsit5(), L2Loss(t, realdata),\r\n    maxiters=10000, verbose=false)\r\n\r\nusing Optim\r\nresult_bfgs = Optim.optimize(cost_function, [1.0, 1.0, 1.0])\r\nprint(result_bfgs.minimizer)\r\n\r\nresult_bfgs = Optim.optimize(cost_function, [773.0,49.0,652.0])\r\nprint(result_bfgs.minimizer)\r\n\r\n\r\nu0=3.6\r\ntspan = (0.0,3000.0)\r\np = [267.0,45.0,343.0]\r\nprob = ODEProblem(ff,u0,tspan,p)\r\nsol = solve(prob, Tsit5())\r\nplot(sol)","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"原始数据：","category":"page"},{"location":"Optimization/DE_Estim/","page":"微分方程参数辨识实例","title":"微分方程参数辨识实例","text":"Time (min),Valve Position (% open),Temperature (degC)\r\n0,0,3.6\r\n5,0,3.7\r\n10,0,3.6\r\n15,0,3.7\r\n20,0,3.6\r\n25,0,3.7\r\n30,0,3.7\r\n35,0,3.6\r\n40,0,3.6\r\n45,0,3.6\r\n50,0,3.6\r\n55,0,3.7\r\n60,0,3.7\r\n65,0,3.7\r\n70,0,3.7\r\n75,0,3.5\r\n80,0,3.6\r\n85,0,3.7\r\n90,0,3.5\r\n95,0,3.6\r\n100,0,3.5\r\n105,0,3.7\r\n110,0,3.6\r\n115,0,3.7\r\n120,0,3.6\r\n125,0,3.7\r\n130,0,3.7\r\n135,0,3.7\r\n140,0,3.7\r\n145,0,3.7\r\n150,0,3.7\r\n155,0,3.5\r\n160,0,3.6\r\n165,0,3.6\r\n170,0,3.6\r\n175,0,3.7\r\n180,0,3.6\r\n185,0,3.6\r\n190,0,3.7\r\n195,0,3.6\r\n200,0,3.5\r\n205,0,3.6\r\n210,0,3.5\r\n215,0,3.7\r\n220,0,3.6\r\n225,0,3.5\r\n230,0,3.7\r\n235,0,3.7\r\n240,0,3.6\r\n245,0,3.7\r\n250,0,3.5\r\n255,0,3.7\r\n260,0,3.7\r\n265,0,3.6\r\n270,0,3.6\r\n275,0,3.7\r\n280,0,3.7\r\n285,0,3.7\r\n290,0,3.5\r\n295,0,3.7\r\n300,0,3.5\r\n305,0,3.5\r\n310,0,3.7\r\n315,0,3.6\r\n320,0,3.7\r\n325,0,3.6\r\n330,0,3.7\r\n335,0,3.5\r\n340,0,3.5\r\n345,0,3.5\r\n350,0,3.7\r\n355,0,3.7\r\n360,0,3.6\r\n365,0,3.6\r\n370,0,3.7\r\n375,0,3.5\r\n380,0,3.7\r\n385,0,3.5\r\n390,0,3.7\r\n395,0,3.6\r\n400,100,3.7\r\n405,100,14.9\r\n410,100,18.2\r\n415,100,19.2\r\n420,100,19.9\r\n425,100,20.1\r\n430,100,20.8\r\n435,100,21.0\r\n440,100,21.3\r\n445,100,21.4\r\n450,100,21.5\r\n455,100,22.0\r\n460,100,21.8\r\n465,100,21.8\r\n470,100,21.9\r\n475,100,21.5\r\n480,100,21.7\r\n485,100,21.2\r\n490,100,20.7\r\n495,100,20.3\r\n500,100,20.3\r\n505,100,20.1\r\n510,100,21.2\r\n515,100,22.8\r\n520,100,23.9\r\n525,100,24.2\r\n530,100,24.9\r\n535,100,25.7\r\n540,100,26.4\r\n545,100,26.5\r\n550,100,26.7\r\n555,100,27.3\r\n560,100,27.6\r\n565,100,27.5\r\n570,100,27.5\r\n575,100,27.7\r\n580,100,27.8\r\n585,100,27.8\r\n590,100,27.9\r\n595,100,27.9\r\n600,100,28.0\r\n605,100,28.2\r\n610,100,28.2\r\n615,100,28.5\r\n620,100,28.7\r\n625,100,28.9\r\n630,100,29.0\r\n635,100,29.2\r\n640,100,29.7\r\n645,100,29.8\r\n650,100,30.1\r\n655,100,30.4\r\n660,100,30.5\r\n665,100,30.9\r\n670,100,31.6\r\n675,100,31.8\r\n680,100,32.2\r\n685,100,32.7\r\n690,100,32.8\r\n695,100,33.0\r\n700,100,33.4\r\n705,100,33.8\r\n710,100,34.0\r\n715,100,34.6\r\n720,100,34.8\r\n725,100,35.2\r\n730,100,35.4\r\n735,100,35.7\r\n740,100,36.0\r\n745,100,36.6\r\n750,100,36.8\r\n755,100,36.9\r\n760,100,37.3\r\n765,100,37.5\r\n770,100,37.7\r\n775,100,37.9\r\n780,100,37.9\r\n785,100,38.3\r\n790,100,38.2\r\n795,100,38.4\r\n800,100,38.7\r\n805,100,38.8\r\n810,100,39.1\r\n815,100,39.2\r\n820,100,39.2\r\n825,100,39.4\r\n830,100,39.4\r\n835,100,39.3\r\n840,100,39.5\r\n845,100,39.5\r\n850,100,39.7\r\n855,100,39.7\r\n860,100,39.8\r\n865,100,40.1\r\n870,100,39.9\r\n875,100,40.1\r\n880,100,40.0\r\n885,100,40.2\r\n890,100,40.1\r\n895,100,40.3\r\n900,100,40.3\r\n905,100,40.2\r\n910,100,40.1\r\n915,100,40.1\r\n920,100,40.1\r\n925,100,40.2\r\n930,100,40.3\r\n935,100,40.4\r\n940,100,40.4\r\n945,100,40.8\r\n950,100,40.8\r\n955,100,40.8\r\n960,100,40.7\r\n965,100,40.9\r\n970,100,41.0\r\n975,100,41.2\r\n980,100,41.3\r\n985,100,41.3\r\n990,100,41.3\r\n995,100,41.3\r\n1000,100,41.4\r\n1005,100,41.7\r\n1010,100,41.7\r\n1015,100,41.6\r\n1020,100,41.8\r\n1025,100,41.6\r\n1030,100,41.7\r\n1035,100,41.8\r\n1040,100,41.9\r\n1045,100,42.0\r\n1050,100,42.1\r\n1055,100,42.0\r\n1060,100,42.2\r\n1065,100,42.1\r\n1070,100,42.4\r\n1075,100,42.4\r\n1080,100,42.6\r\n1085,100,42.7\r\n1090,100,42.7\r\n1095,100,42.9\r\n1100,100,43.0\r\n1105,100,43.0\r\n1110,100,43.1\r\n1115,100,43.2\r\n1120,100,43.4\r\n1125,100,43.4\r\n1130,100,43.5\r\n1135,100,43.4\r\n1140,100,43.5\r\n1145,100,43.8\r\n1150,100,43.8\r\n1155,100,43.8\r\n1160,100,44.0\r\n1165,100,44.0\r\n1170,100,44.0\r\n1175,100,44.1\r\n1180,100,44.1\r\n1185,100,44.2\r\n1190,100,44.3\r\n1195,100,44.2\r\n1200,100,44.4\r\n1205,100,44.4\r\n1210,100,44.3\r\n1215,100,44.4\r\n1220,100,44.2\r\n1225,100,44.2\r\n1230,100,44.0\r\n1235,100,44.1\r\n1240,100,43.9\r\n1245,100,43.9\r\n1250,100,43.8\r\n1255,100,44.0\r\n1260,100,44.0\r\n1265,100,43.8\r\n1270,100,43.9\r\n1275,100,43.9\r\n1280,100,44.0\r\n1285,100,44.0\r\n1290,100,44.1\r\n1295,100,44.1\r\n1300,100,44.2\r\n1305,100,43.9\r\n1310,100,43.9\r\n1315,100,44.0\r\n1320,100,43.8\r\n1325,100,43.9\r\n1330,100,43.8\r\n1335,100,43.9\r\n1340,100,43.8\r\n1345,100,43.6\r\n1350,100,43.7\r\n1355,100,43.7\r\n1360,100,43.8\r\n1365,100,43.7\r\n1370,100,43.6\r\n1375,100,43.8\r\n1380,100,43.6\r\n1385,100,43.7\r\n1390,100,43.4\r\n1395,100,43.4\r\n1400,100,43.5\r\n1405,100,43.4\r\n1410,100,43.4\r\n1415,100,43.6\r\n1420,100,43.7\r\n1425,100,43.6\r\n1430,100,43.6\r\n1435,100,43.5\r\n1440,100,43.5\r\n1445,100,43.6\r\n1450,100,43.6\r\n1455,100,43.5\r\n1460,100,43.4\r\n1465,100,43.6\r\n1470,100,43.6\r\n1475,100,43.6\r\n1480,100,43.6\r\n1485,100,43.7\r\n1490,100,43.7\r\n1495,100,43.7\r\n1500,100,43.7\r\n1505,100,43.6\r\n1510,100,43.6\r\n1515,100,43.7\r\n1520,100,43.7\r\n1525,100,43.5\r\n1530,100,43.5\r\n1535,100,43.7\r\n1540,100,43.8\r\n1545,100,43.7\r\n1550,100,43.8\r\n1555,100,43.8\r\n1560,100,43.8\r\n1565,100,43.8\r\n1570,100,43.9\r\n1575,100,44.0\r\n1580,100,43.8\r\n1585,100,43.9\r\n1590,100,44.0\r\n1595,100,44.1\r\n1600,100,44.1\r\n1605,100,44.1\r\n1610,100,44.2\r\n1615,100,44.0\r\n1620,100,44.1\r\n1625,100,44.0\r\n1630,100,44.0\r\n1635,100,44.1\r\n1640,100,44.1\r\n1645,100,44.2\r\n1650,100,44.2\r\n1655,100,44.2\r\n1660,100,44.2\r\n1665,100,44.1\r\n1670,100,44.3\r\n1675,100,44.3\r\n1680,100,44.3\r\n1685,100,44.5\r\n1690,100,44.5\r\n1695,100,44.5\r\n1700,100,44.5\r\n1705,100,44.5\r\n1710,100,44.6\r\n1715,100,44.7\r\n1720,100,44.5\r\n1725,100,44.7\r\n1730,100,44.7\r\n1735,100,44.9\r\n1740,100,44.8\r\n1745,100,45.0\r\n1750,100,44.8\r\n1755,100,44.9\r\n1760,100,44.9\r\n1765,100,45.0\r\n1770,100,45.1\r\n1775,100,45.1\r\n1780,100,45.1\r\n1785,100,45.2\r\n1790,100,45.1\r\n1795,100,45.2\r\n1800,100,45.2\r\n1805,100,45.3\r\n1810,100,45.3\r\n1815,100,45.2\r\n1820,100,45.3\r\n1825,100,45.2\r\n1830,100,45.2\r\n1835,100,45.3\r\n1840,100,45.3\r\n1845,100,45.2\r\n1850,100,45.3\r\n1855,100,45.2\r\n1860,100,45.4\r\n1865,100,45.4\r\n1870,100,45.2\r\n1875,100,45.4\r\n1880,100,45.3\r\n1885,100,45.4\r\n1890,100,45.4\r\n1895,100,45.2\r\n1900,100,45.1\r\n1905,100,45.2\r\n1910,100,45.1\r\n1915,100,45.3\r\n1920,100,45.1\r\n1925,100,45.2\r\n1930,100,45.2\r\n1935,100,45.0\r\n1940,100,45.0\r\n1945,100,45.1\r\n1950,100,45.2\r\n1955,100,45.0\r\n1960,100,45.2\r\n1965,100,45.3\r\n1970,100,45.2\r\n1975,100,45.3\r\n1980,100,45.1\r\n1985,100,45.2\r\n1990,100,45.3\r\n1995,100,45.3\r\n2000,100,45.3\r\n2005,100,45.3\r\n2010,100,45.2\r\n2015,100,45.3\r\n2020,100,45.1\r\n2025,100,45.3\r\n2030,100,45.2\r\n2035,100,45.2\r\n2040,100,45.4\r\n2045,100,45.2\r\n2050,100,45.3\r\n2055,100,45.4\r\n2060,100,45.5\r\n2065,100,45.4\r\n2070,100,45.4\r\n2075,100,45.3\r\n2080,100,45.4\r\n2085,100,45.3\r\n2090,100,45.5\r\n2095,100,45.4\r\n2100,100,45.5\r\n2105,100,45.3\r\n2110,100,45.5\r\n2115,100,45.5\r\n2120,100,45.5\r\n2125,100,45.3\r\n2130,100,45.4\r\n2135,100,45.4\r\n2140,100,45.4\r\n2145,100,45.5\r\n2150,100,45.3\r\n2155,100,45.5\r\n2160,100,45.4\r\n2165,100,45.5\r\n2170,100,45.3\r\n2175,100,45.5\r\n2180,100,45.5\r\n2185,100,45.5\r\n2190,100,45.5\r\n2195,100,45.4\r\n2200,100,45.5\r\n2205,100,45.3\r\n2210,100,45.4\r\n2215,100,45.4\r\n2220,100,45.5\r\n2225,100,45.3\r\n2230,100,45.3\r\n2235,100,45.4\r\n2240,100,45.5\r\n2245,100,45.5\r\n2250,100,45.5\r\n2255,100,45.5\r\n2260,100,45.5\r\n2265,100,45.5\r\n2270,100,45.5\r\n2275,100,45.6\r\n2280,100,45.5\r\n2285,100,45.6\r\n2290,100,45.5\r\n2295,100,45.5\r\n2300,100,45.5\r\n2305,100,45.5\r\n2310,100,45.6\r\n2315,100,45.6\r\n2320,100,45.7\r\n2325,100,45.5\r\n2330,100,45.6\r\n2335,100,45.6\r\n2340,100,45.7\r\n2345,100,45.8\r\n2350,100,45.7\r\n2355,100,45.7\r\n2360,100,45.6\r\n2365,100,45.8\r\n2370,100,45.7\r\n2375,100,45.9\r\n2380,100,45.8\r\n2385,100,45.8\r\n2390,100,45.7\r\n2395,100,45.6\r\n2400,100,45.9\r\n2405,100,45.7\r\n2410,100,45.7\r\n2415,100,45.7\r\n2420,100,45.7\r\n2425,100,45.8\r\n2430,100,45.9\r\n2435,100,45.8\r\n2440,100,45.7\r\n2445,100,45.9\r\n2450,100,45.8\r\n2455,100,45.7\r\n2460,100,45.9\r\n2465,100,45.9\r\n2470,100,45.9\r\n2475,100,45.9\r\n2480,100,45.7\r\n2485,100,45.8\r\n2490,100,45.7\r\n2495,100,45.7\r\n2500,100,45.9\r\n2505,100,45.8\r\n2510,100,45.9\r\n2515,100,45.8\r\n2520,100,45.7\r\n2525,100,45.7\r\n2530,100,45.9\r\n2535,100,45.8\r\n2540,100,45.9\r\n2545,100,45.9\r\n2550,100,45.9\r\n2555,100,45.7\r\n2560,100,46.0\r\n2565,100,45.8\r\n2570,100,45.8\r\n2575,100,45.9\r\n2580,100,46.0\r\n2585,100,45.8\r\n2590,100,46.0\r\n2595,100,45.8\r\n2600,100,45.8\r\n2605,100,45.9\r\n2610,100,46.0\r\n2615,100,46.0\r\n2620,100,45.9\r\n2625,100,46.0\r\n2630,100,46.1\r\n2635,100,45.9\r\n2640,100,46.0\r\n2645,100,46.0\r\n2650,100,45.9\r\n2655,100,46.0\r\n2660,100,46.0\r\n2665,100,46.0\r\n2670,100,46.0\r\n2675,100,46.1\r\n2680,100,46.0\r\n2685,100,46.1\r\n2690,100,46.1\r\n2695,100,46.0\r\n2700,100,45.9\r\n2705,100,46.1\r\n2710,100,45.9\r\n2715,100,46.1\r\n2720,100,46.0\r\n2725,100,46.0\r\n2730,100,46.1\r\n2735,100,46.0\r\n2740,100,46.0\r\n2745,100,46.0\r\n2750,100,46.0\r\n2755,100,46.0\r\n2760,100,46.0\r\n2765,100,45.8\r\n2770,100,46.0\r\n2775,100,46.0\r\n2780,100,45.8\r\n2785,100,45.9\r\n2790,100,45.9\r\n2795,100,45.9\r\n2800,100,45.9\r\n2805,100,46.0\r\n2810,100,46.0\r\n2815,100,46.0\r\n2820,100,46.0\r\n2825,100,46.0\r\n2830,100,45.9\r\n2835,100,45.9\r\n2840,100,45.9\r\n2845,100,45.9\r\n2850,100,45.9\r\n2855,100,46.0\r\n2860,100,46.0\r\n2865,100,45.9\r\n2870,100,45.8\r\n2875,100,45.8\r\n2880,100,46.1\r\n2885,100,46.0\r\n2890,100,46.1\r\n2895,100,45.9\r\n2900,100,46.1\r\n2905,100,45.9\r\n2910,100,46.1\r\n2915,100,45.9\r\n2920,100,46.0\r\n2925,100,45.9\r\n2930,100,46.1\r\n2935,100,46.0\r\n2940,100,46.0\r\n2945,100,46.1\r\n2950,100,46.0\r\n2955,100,46.0\r\n2960,100,46.1\r\n2965,100,46.1\r\n2970,100,46.0\r\n2975,100,45.9\r\n2980,100,46.0\r\n2985,100,46.1\r\n2990,100,46.0\r\n2995,100,46.1\r\n3000,100,46.0","category":"page"},{"location":"Modeling/MTK_intro/#ModelingToolkit建模方法","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"","category":"section"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"tip: Tip\nContents：建模、MTKContributor: YJYEmail:522432938@qq.com如有错误，请批评指正。","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"note: Note\nMTK = ModelingToolkit.jlModelingToolkit.jl为基于符号系统的建模工具包。","category":"page"},{"location":"Modeling/MTK_intro/#符号计算内涵","page":"ModelingToolkit建模方法","title":"符号计算内涵","text":"","category":"section"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"符号计算的内涵很简单，其本质就是处理、简化方程的未知数。例如: (x+y)z = xy + yz 又例如: $\\frac{dy}{dt} = 2t => y = t^2 + C $ 它们本质上都是数学符号的推演，而没有涉及到数字的计算。","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"一般的情况下，可以计算问题都是人为地把计算推演到数字计算的层面，中间的符号推演、化简的过程都不由计算机处理。随着计算机能力的日益强大，以及计算理论的发展。计算机也能开始进行符号计算。","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"例如，(x+y)z = xy + yz就完全能由计算机计算并得到结果。","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"MTK，就是这样一种符号计算包。在DE中，我们构建的是方程（function），通过方程来建立模型。而在MTK中，我们构建的是符号，通过符号建立模型。","category":"page"},{"location":"Modeling/MTK_intro/#MTK符号计算实例","page":"ModelingToolkit建模方法","title":"MTK符号计算实例","text":"","category":"section"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"考虑洛伦兹方程：","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"fracdxdt  = sigma(x+y)  fracdydt  = x(rho-z)-y  fracdzdt = xy - beta z","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"通过MTK构建：","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"@variables t u[1:3](t)\r\n@parameters p[1:3]\r\nD = Differential(t)\r\neqs =[\r\n    D(u[1]) ~ p[1]*(u[2]-u[1])\r\n    D(u[2]) ~ u[1]*(p[2]-u[3]) - u[2]\r\n    D(u[3]) ~ u[1]*u[2] - p[3]*u[3]\r\n]\r\nSys = ODESystem(eqs)","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"其中：","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"t是时间变量\nu是关于时间的依赖变量向量\n参数向量p\n微分符号D\neqs本质是一个描述符号方程的数组","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"@variables定义了符号变量，@parameters p[1:3]定义了参数。方程由ODESystem结构体储存，可以看到其中描述“=”的符号为“~”。这些表明，上述代码在处理符号，这是一套符号描述体系！","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"(Image: 图 1)  ","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"因为是处理符号时，当然也可以更加具象，将符号定义为xyz","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"@variables t x(t) y(t) z(t)\r\n@parameters  σ ρ β\r\nD = Differential(t)\r\neqs =[\r\n    D(x) ~ σ*(y-x)\r\n    D(y) ~ x*(ρ-z) - y\r\n    D(z) ~ x*y - β*z\r\n]\r\nsys = ODESystem(eqs)","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"(Image: 图 2)  ","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"由于符号运算的展现形式更加贴近自然语言，我们几乎可以不加处理地建立与原数学方程几乎一样的符号方程描述，这是符号计算的优势之一。","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"在明确MTK的系统构建之后，与DifferentialEquations一样，最后需要明确定义的问题以及初值等要素。","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"tspan = (0.0,100.0)\r\nu0 =[\r\n    x => 1.0\r\n    y => 0.0\r\n    z => 0.0\r\n]\r\np=[\r\n    σ => 10.0\r\n    ρ => 28.0\r\n    β => 8/3\r\n]\r\nprob = ODEProblem(sys,u0,tspan,p)\r\nsol = solve(prob,Tsit5())","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"与DE不同是，MTK传值时需要指定具体变量（参数的值）。 最后能得到与DE计算同样的结果。","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"全部代码：","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"using ModelingToolkit\r\nusing DifferentialEquations\r\n@variables t x(t) y(t) z(t)\r\n@parameters  σ ρ β\r\nD = Differential(t)\r\neqs =[\r\n    D(x) ~ σ*(y-x)\r\n    D(y) ~ x*(ρ-z) - y\r\n    D(z) ~ x*y - β*z\r\n]\r\n@named sys = ODESystem(eqs)\r\ntspan = (0.0,10.0)\r\nu0 =[\r\n    x => 1.0\r\n    y => 0.0\r\n    z => 0.0\r\n]\r\np=[\r\n    σ => 10.0\r\n    ρ => 28.0\r\n    β => 8/3\r\n]\r\nprob = ODEProblem(sys,u0,tspan,p)\r\nsol = solve(prob,Tsit5())","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"","category":"page"},{"location":"Modeling/MTK_intro/#DE与MTK的对比","page":"ModelingToolkit建模方法","title":"DE与MTK的对比","text":"","category":"section"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"同一问题，可用MTK与DE来求解。但它们并不完全等价，异同是客观存在的：","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"不同之处：   ModelingToolkit基于符号体系描述问题，等价于在DifferentialEquations问题描述的上层添加了一层符号系统，通过求解符号系统之后，能得到真正的微分方程问题。","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"相同之处：   它们最终得到的问题形式是一样的，比如说最终都会生成ODEProblem，也就是说它们可以通过同一个求解器求解。","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"MTK凭借着符号计算，在模型建立时会更加方便，更加友好。符号推演功能相当于减轻了模型构造时的工作量，即在数学模型到计算机可计算的模型这个过程中，计算机又往前前进了一步。所以，MTK从某种程度上来说会比DE好用很多。","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"从另一个角度来看，DE是MTK的底层求解器，意味着其比MTK更加直接，速度更快。MTK在DE基础之上构建了符号计算系统，其形式与功能上让人惊叹。但要明白的是，这种提供便捷的符号计算系统是要使用资源的，MTK需要花费更多资源去计算、化简符号。好用意味着大量的资源消耗在用户友好方面，效率高意味着资源消耗在真正的问题解决上。这是软件发展过程中始终存在的矛盾。","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"note: Note\n就像Linux与Windows一样。大家在开发环境中都愿意用Windows，但在服务器端都用的是Linux。也像是Python与C之间的矛盾。Python代码易用，但运行效率却远远比不上C代码。","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"关于DE与MTK的取舍，根据问题的特性选择即可。","category":"page"},{"location":"Modeling/MTK_intro/","page":"ModelingToolkit建模方法","title":"ModelingToolkit建模方法","text":"此外，MTK的符号系统还有更大的妙用，在后面的章节中会逐渐展开。","category":"page"},{"location":"Control/JuMPMPC/#JuMP求解MPC问题","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"","category":"section"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"tip: Tip\nContents：JuMP、ControlContributor: YJYEmail:522432938@qq.com如有错误，请批评指正。","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"note: Note\nJuMP是计算优化问题的Julia软件包。","category":"page"},{"location":"Control/JuMPMPC/#MTK中的OptimizationSystem、ControlSystem","page":"JuMP求解MPC问题","title":"MTK中的OptimizationSystem、ControlSystem","text":"","category":"section"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"通过MTK中的OptimizationSystem、ControlSystem构建MPC问题都是可行的，但是其一个致命的问题是，System会忽略约束！换一句话说，System只接受Loss方程。这是MTK优化体系不完善的地方。那么，Julia中较为成熟的优化包是JuMP、Optim和NLopt。JuMP的集成度比较好，在JuMP中可以根据不同的优化问题使用不同的求解器。所以尝试用JuMP解决。","category":"page"},{"location":"Control/JuMPMPC/#实例：加热器问题","page":"JuMP求解MPC问题","title":"实例：加热器问题","text":"","category":"section"},{"location":"Control/JuMPMPC/#问题描述","page":"JuMP求解MPC问题","title":"问题描述","text":"","category":"section"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"现在有一个物体加热，它的温度由加热项和散热项决定。α是散热系数，β是加热系数，环境温度为T_out。那么控制方程: ","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"T = α*(T_out - T) + β*Q(t)","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"现在可以改变加热功率，那么我们构建一个优化问题：调节加热功率，使得物体的温度从T_0开始，迅速上升并且稳定在某一个温度（比如说58℃）。问题的数学表达为，通过优化控制变量Q(t) 使得损失函数最小:","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"Loss = sum_i 580-T(t_i)","category":"page"},{"location":"Control/JuMPMPC/#构建问题","page":"JuMP求解MPC问题","title":"构建问题","text":"","category":"section"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"首先明确问题。现在假设以一个恒定功率（p=80）加热物体，环境温度18℃，初始温度20℃,散热系数α = 0.2,加热系数β = 0.1。先求解该问题。","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"using Plots,DifferentialEquations\r\nTout = 18.0\r\nα = 0.2\r\nβ = 0.1\r\nf(x,p,t) = α*(Tout - x) + β*p\r\ntspan=(0.0,40.0)\r\nu0 = 20.0\r\np = 80.0\r\npr = ODEProblem(f,u0,tspan,p)\r\nsol = solve(pr)\r\nplot(sol,ylimit=(10,60))","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"得到的结果是： (Image: 图 1)  ","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"很清晰可以看到，温度缓慢上升最后稳定在58℃。那么作为我们拍脑袋的控制策略来说，这个控制问题很简单。我们可以先让功率在前期比较大（比如说150），等温度到了58℃附近，再把功率调回80，就可以实现“温度迅速上升并最后稳定在58度”。","category":"page"},{"location":"Control/JuMPMPC/#优化求解","page":"JuMP求解MPC问题","title":"优化求解","text":"","category":"section"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"using JuMP,Ipopt\r\nN = 40\r\nTout = 18.0\r\nT0 = 20.0\r\ndt = 8/N\r\nLoss = 0.0\r\nT = T0\r\nα = 0.2\r\nβ = 0.1\r\nmodel = Model(Ipopt.Optimizer)\r\n@variable(model, 0 <= u[1:N] <= 200)\r\nfor i in 1:N\r\n    global T = @expression(model,T + (α*(Tout - T) + β*u[i])*dt)\r\n    global Loss += @expression(model,(T - 58.0)^2)\r\nend\r\nfor i = 1:N-1\r\n    @constraint(model,-5 <= u[i]-u[i+1] <= 5)\r\nend\r\n@objective(model, Min, Loss)\r\noptimize!(model)\r\nJuMP.value.(u)","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"u是符号量，离散的个数为N，上面选择离散为40个变量。通过一个for循环，就可以迭代求解40个点上的温度值并且构建Loss方程。同时添加约束，约束的物理含义是控制加热器功率的改变幅度不能太大，这里设置为（-5，5）。","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"PS：这里的离散方法，对微分方程求解来说实际上是最简单的欧拉法，精度有待提高，后退欧拉法，亚当斯方法，龙格库塔方法等等方法都可以用来构建Loss方程，只不过方程表达式会很复杂。","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"最后我们可以看到整个定义的问题。","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"print(model)","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"表达式非常复杂，就不放图了。","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"加热功率的变化为：","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"plot([(i -1)*dt for i in 1:N],value.(u))","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"(Image: 图 2)  ","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"温度的变化为：","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"(Image: 图 3)  ","category":"page"},{"location":"Control/JuMPMPC/#调节约束","page":"JuMP求解MPC问题","title":"调节约束","text":"","category":"section"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"结果有些许波动，调一下功率变化的幅度限制，把约束范围调成（-10，10）","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"加热功率的变化为：","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"plot([(i -1)*dt for i in 1:N],value.(u))","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"(Image: 图 1)  ","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"温度的变化为：","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"(Image: 图 4)  ","category":"page"},{"location":"Control/JuMPMPC/","page":"JuMP求解MPC问题","title":"JuMP求解MPC问题","text":"比刚刚好多了！","category":"page"},{"location":"Optimization/JuMP参数辨识/#JuMP非线性参数辨识实例","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"","category":"section"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"tip: Tip\nContents：参数辨识、优化、JuMPContributor: YJYEmail:522432938@qq.com如有错误，请批评指正。","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"note: Note\nJuMP = JuMP.jlNLP = NonlinearnProblem，非线性问题JuMP是计算优化问题的Julia软件包。","category":"page"},{"location":"Optimization/JuMP参数辨识/#JuMP介绍","page":"JuMP非线性参数辨识实例","title":"JuMP介绍","text":"","category":"section"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"JuMP是一种特定领域的建模语言，用于嵌入Julia中的数学优化。可以用于解决各类优化问题。JuMP的指南中列出了可用的求解器，以及能够求解问题的类型。","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"JuMP建模的思路主要分为3步：","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"定义求解器\n明确问题\n求解","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"使用MTK非线性参数辨识实例中的参数优化问题作为求解实例展开介绍","category":"page"},{"location":"Optimization/JuMP参数辨识/#求解实例","page":"JuMP非线性参数辨识实例","title":"求解实例","text":"","category":"section"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"为了优化下面模型中的参数ab：","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"y = ax^2+sin(bx)a=15b=08","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"人为生成数据，","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"##### 生成真实数据 #####\r\nx = collect(-1:0.01:1)\r\nN = length(x)\r\n# 产生随机误差，范围在-0.1~0.1之间\r\nrands = rand(-0.1:0.01:0.1, N)\r\na1 = 1.5\r\na2 = 0.8\r\n# 计算y值\r\ny = @. a1 * x^2 + sin(a2 * x) + rands","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"JuMP优化：","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"首先，定义求解器：","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"###### 定义求解器 #######\r\nmodel = Model(Ipopt.Optimizer)","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"随后，定义优化变量，在参数辨识问题中，被优化的参数为ab：","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"###### 定义变量 #######\r\n@variable(model, para[1:2])","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"其次，构建优化问题的数学表达，需要用@NLexpression生成非线性优化中的中间表达Loss。使用@NLobjective，从Loss中构建最小化优化问题。参数优化问题没有变量约束，也可以说是全局优化问题。","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"tip: Tip\n@NLobjective、@NLexpression与非线性优化问题有关，在线性优化问题中，使用@expression。不同问题类型使用不同的宏，是JuMP问题构建的特点。","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"###### 构建问题 #######\r\n@NLexpression(model, Loss,\r\n    sum((para[1] * x[i]^2 + sin(para[2] * x[i]) - y[i])^2 for i in 1:N))\r\n@NLobjective(model, Min, Loss)","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"最后求解","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"###### 赋初值 #######\r\nfor i in 1:2\r\n    set_start_value(para[i], 0.3)\r\nend\r\n###### 求解 #######\r\nJuMP.optimize!(model)\r\nJuMP.value.(para)","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"结果：","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"2-element Vector{Float64}:\r\n 1.4989653389675912\r\n 0.8133014851045581","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"warning: Warning\n优化的求解器不是万能的，当一个参数辨识问题无法求解时有很多原因，例如：用来描述系统的数学模型不精确上述例子中，优化数据集本身就来自于模型，所以可以肯定数据的本质一定是我们选定的模型。在实际中，面对大量的数据，数学模型准不准确往往是未知的。优化问题较为复杂多变量的复合函数，以及多优化目标的优化问题。在数学上可能有多个局部最优解。有些结果往往不太理想，典型的表现上是不同的初值获得不同的结果。或表现为初值敏感，当初值有微小改变，也能引起结果的巨大不同。面对这些数学上的难点，需要采取一些其它的策略。优化模型或者采取更加强大的求解器......","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"全部代码：","category":"page"},{"location":"Optimization/JuMP参数辨识/","page":"JuMP非线性参数辨识实例","title":"JuMP非线性参数辨识实例","text":"using JuMP, Ipopt\r\n\r\n##### 生成真实数据 ####\r\nx = collect(-1:0.01:1)\r\nN = length(x)\r\n# 产生随机误差，范围在-0.1~0.1之间\r\nrands = rand(-0.1:0.01:0.1, N)\r\na1 = 1.5\r\na2 = 0.8\r\n# 计算y值\r\ny = @. a1 * x^2 + sin(a2 * x) + rands\r\n\r\nmodel = Model(Ipopt.Optimizer)\r\n@variable(model, para[1:2])\r\n@NLexpression(model, Loss,\r\n    sum((para[1] * x[i]^2 + sin(para[2] * x[i]) - y[i])^2 for i in 1:N))\r\n@NLobjective(model, Min, Loss)\r\nfor i in 1:2\r\n    set_start_value(para[i], 0.3)\r\nend\r\n\r\nJuMP.optimize!(model)\r\nJuMP.value.(para)","category":"page"},{"location":"Control/MTKMPC/#MTK求解MPC问题","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"","category":"section"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"tip: Tip\nContents：MTK、ControlContributor: YJYEmail:522432938@qq.com如有错误，请批评指正。","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"note: Note\nMPC = Model Predict ControlMTK = ModelingToolkit.jlOptimizationSystem为MTK中的系统类型之一","category":"page"},{"location":"Control/MTKMPC/#MTK中的ControlSystem","page":"MTK求解MPC问题","title":"MTK中的ControlSystem","text":"","category":"section"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"在ModellingToolkit的Optimal Control中，有关于ControlSystem的描述。但经过实验测试，ControlSystem并不能很好地求解“过程控制量”的值。","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"因为MTK使用rungekuttadiscretize（龙格库塔离散）函数将问题离散。问题离散后，传入OptimizationSystem，而OptimizationSystem目前有一个缺陷——不能接受问题的约束。所以，即使用龙格库塔离散离散出控制过程中的多个状态量，在变量没有约束时，优化结果没有意义。（离散的概念在微分方程参数辨识中有提及） 在实例过后，这一点会有清晰的体现。","category":"page"},{"location":"Control/MTKMPC/#MTK中的OptimizationSystem","page":"MTK求解MPC问题","title":"MTK中的OptimizationSystem","text":"","category":"section"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"为了简单起见，手动构建一个MPC优化问题，通过OptimizationSystem来求解。通过构建优化目标方程，调用不同优化器求解该优化问题。那么从控制问题到优化问题这一过程可以看成是手动离散。相当于自己实现了rungekuttadiscretize。构建完优化问题，就可以直接把它推给OptimizationProblem求解，这是可以做到的。","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"上述过程的核心就是把控制中的状态量手写出来。","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"可行的做法是，通过MTK符号建模体系建立优化变量，同时构建Loss方程关于优化变量的符号表达。通过OptimizationSystem生成用符号体系构建的优化问题，把构建的OptimizationSystem推给OptimizationProblem，最后选择合适的求解器求解。","category":"page"},{"location":"Control/MTKMPC/#实例：加热器问题","page":"MTK求解MPC问题","title":"实例：加热器问题","text":"","category":"section"},{"location":"Control/MTKMPC/#问题描述","page":"MTK求解MPC问题","title":"问题描述","text":"","category":"section"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"现在有一个物体加热，它的温度由加热项和散热项决定。α是散热系数，β是加热系数，环境温度为T_out。那么控制方程: ","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"T = α*(T_out - T) + β*Q(t)","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"现在可以改变加热功率，那么我们构建一个优化问题：调节加热功率，使得物体的温度从T_0开始，迅速上升并且稳定在某一个温度（比如说58℃）。问题的数学表达为，通过优化控制变量Q(t) 使得损失函数最小:","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"Loss = sum_i 580-T(t_i)","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"而Q(t_i)就是未来一段时间域内，不同时间点上的控制量（控制科学中称为状态量）。通过改变这些值，能够控制温度的走势，这是控制的内涵。若使温度达到一个让人满意的状态（这里是维持在58℃，也可以是使温度线性上升等等），这是最优控制的内涵。","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"所以，最优控制或者模型预测控制最根本的数学内涵是优化——多变量优化。这也是为什么能用OptimizationProblem来处理控制问题。","category":"page"},{"location":"Control/MTKMPC/#构建问题","page":"MTK求解MPC问题","title":"构建问题","text":"","category":"section"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"首先明确问题。现在假设以一个恒定功率（p=80）加热物体，环境温度18℃，初始温度20℃,散热系数α = 0.2,加热系数β = 0.1。先求解该问题。","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"using Plots,DifferentialEquations\r\nTout = 18.0\r\nα = 0.2\r\nβ = 0.1\r\nf(x,p,t) = α*(Tout - x) + β*p\r\ntspan=(0.0,40.0)\r\nu0 = 20.0\r\np = 80.0\r\npr = ODEProblem(f,u0,tspan,p)\r\nsol = solve(pr)\r\nplot(sol,ylimit=(10,60))","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"得到的结果是： (Image: 图 1)  ","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"很清晰可以看到，温度缓慢上升最后稳定在58℃。那么作为我们拍脑袋的控制策略来说，这个控制问题很简单。我们可以先让功率在前期比较大（比如说150），等温度到了58℃附近，再把功率调回80，就可以实现“温度迅速上升并最后稳定在58度”。","category":"page"},{"location":"Control/MTKMPC/#优化求解","page":"MTK求解MPC问题","title":"优化求解","text":"","category":"section"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"using Symbolics,ModelingToolkit,GalacticOptim,Optim\r\nN = 20\r\nTout = 18.0\r\nT0 = 20.0\r\ndt = 4/N\r\nLoss = 0.0\r\nT = T0\r\nα = 0.2\r\nβ = 0.1\r\n@variables u[1:N]\r\nfor i = 1:N\r\n    global T = T + (α*(Tout - T) + β*u[i])*dt\r\n    global Loss += (T - 58.0)^2\r\nend","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"u是符号量，离散的个数为N，上面选择离散为20个变量。通过一个for循环，就可以迭代求解20个点上的温度值并且构建Loss方程。这里的20个变量，就是控制的核心，通过改变这20个不同时间点上的控制量（加热功率）的值，使得被控量（温度）接近“更好、更快”地接近目标——58℃。","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"可以看到Loss方程的结果：","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"(Image: 图 2)  ","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"有些许复杂，但在情理之中。","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"@named sys = OptimizationSystem(Loss,[u[i] for i in 1:N],[],inequality_constraints=inequ)\r\nu0 = [u[i] => 1.0 for i in 1:N]\r\nlb = [0.0 for i in 1:N]\r\nub = [200.0 for i in 1:N]\r\nprob = OptimizationProblem(sys,u0,[],lb = lb,ub = ub,grad=true,hess=true)\r\ns = solve(prob,Optim.LBFGS())","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"然后构建System和OptimizationProblem，给定上下限。这里功率上限设为200，最后求解！","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"结果为：","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"u: 20-element Vector{Float64}:\r\n 199.99999999999997\r\n 199.99999999999997\r\n 199.99999999999997\r\n 199.99999999999997\r\n 199.99999999999997\r\n 199.99999999999997\r\n 199.99999999999997\r\n 199.99999999999994\r\n 199.99999999999991\r\n 199.9999999999999\r\n 199.99999999999957\r\n 199.99999999996504\r\n  82.18673442597857\r\n  79.99995550035416\r\n  80.0000502201614\r\n  79.99991729083732\r\n  80.00001272875645\r\n  80.00004827285969\r\n  79.99999940246633\r\n  79.99997217751334","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"(Image: 图 3)  ","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"应该说是非常理想的。和我们设想的一样。先以最大功率加热到58℃附近，然后迅速将到稳态维持58℃的功率80，这样2s就完成了控制过程，而之前以恒定功率80加热，耗费了20s!","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"从图中可以很容易看出局限性，加热功率先猛加，以最高限度200直接加热到58，然后功率在恒定在80维持恒温58摄氏度。这种直上直下的调节，很显然不那么让人满意。可以想象，假如不给变量设置上下限，那么优化的结果一定是：第一个离散的变量加热功率上万，相当于在一瞬间使用超大且精准的功率把温度加到58摄氏度。第二个往后的状态量为80——维持恒温58摄氏度的加热功率。","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"这在数学上是合理的，在实际中却没有意义。所以在控制中一般需要加一些约束，比如加热功率上下限、加热功率变化幅度。","category":"page"},{"location":"Control/MTKMPC/","page":"MTK求解MPC问题","title":"MTK求解MPC问题","text":"所以，为了处理约束，可以使用JuMP来做MPC。","category":"page"},{"location":"Modeling/DE_intro/#DifferentialEquations建模方法","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"","category":"section"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"tip: Tip\nContents：建模、DEContributor: YJYEmail:522432938@qq.com如有错误，请批评指正。","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"note: Note\nDE = DifferentialEquations.jlDifferentialEquations.jl为处理时间微分的求解建模工具包。","category":"page"},{"location":"Modeling/DE_intro/#浅谈建模内涵","page":"DifferentialEquations建模方法","title":"浅谈建模内涵","text":"","category":"section"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"在研究各类系统时（上至电力、能源系统、交通系统，下至RC电路、水利管网系统），当我们需要对系统进行处理时，我们都会一件相同的事情——把系统抽象成我们能够处理的对象！","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"从发现问题到获得计算结果，在现代计算科学中一般分为两步：","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"把问题抽象可量化、可处理的数学问题\n把数学问题设计成可用计算机处理与计算的可计算问题","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"在这个过程中，大脑在这个过程充当了“解释器”的角色。把实际的问题层层抽象，最后让问题变得可计算。不得不感叹，人类“编译”能力之强大。也许人类在计算速度上远远不及计算机。但在深度与广度层面，远远超过计算机。","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"从前牛顿等巨人的时代开始，科学家研究的主体内容，主要是是第一步的内容。近40年，计算机科学技术呈爆炸式增长。依托于计算机，社会生产的智能化日益提高。于是基于第2步的问题也发展出许多学科分支，作为科研领域重要的方向之一。","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"不经让人感叹，“啥都不会，就是能算”也是一种不容小觑的能力！","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"言归正传，在第一步中，描述对象的数学形式有微分方程（组）、代数方程（组）、图等等。针对对象进行计算的数学形式有求解方程问题、寻优问题、计算图等等。DifferentialEquations.jl就是处理基于时间微分的微分方程（组）求解软件包！","category":"page"},{"location":"Modeling/DE_intro/#DE使用实例","page":"DifferentialEquations建模方法","title":"DE使用实例","text":"","category":"section"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"现有洛伦兹方程为例：","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"fracdxdt  = sigma(x+y)  fracdydt  = x(rho-z)-y  fracdzdt = xy - beta z","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"微分方程在DifferentialEquations.jl中含有5个要素：","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"方程描述\n求解时间域\n初值（边界条件）\n方程参数\n问题类型","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"在方程定义中，有4个参数：","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"function lorenz!(du,u,p,t)\r\n    du[1] = p[1]*(u[2]-u[1])\r\n    du[2] = u[1]*(p[2]-u[3]) - u[2]\r\n    du[3] = u[1]*u[2] - p[3]*u[3]\r\nend","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"其中，","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"du为微分变量向量\nu为变量向量\np为参数\nt为时间变量","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"剩下要素的定义：","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"p = [10.0,28.0,8/3]\r\nu0 = [1.0;0.0;0.0]\r\ntspan = (0.0,100.0)\r\nprob = ODEProblem(lorenz!,u0,tspan,p)","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"其中，","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"p为参数\nu0变量的初始值\ntspan为求解时间域\nprob为通过方法ODEProblem()定义的ODE问题","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"tip: Tip\nODEProblem = Ordinary Differential Equations Problem(常微分方程)beginarrayl\r\nfracd xd t=sigma(y-x) \r\nfracd yd t=x(rho-z)-y \r\nfracd zd t=x y-beta z\r\nendarray除此之外，还有：DAEProblem = Differential Algebraic Equations Problem（微分代数方程）beginalignedfracd y_1d t =-004 y_1+10^4 y_2 y_3 fracd y_2d t =004 y_1-10^4 y_2 y_3-3 * 10^7 y_2^2 1 =y_1+y_2+y_3endalignedDDEProblem = Delay Differential Equations Problem（随机微分）beginaligned\r\nd x_0 =fracv_01+beta_0left(x_2(t-tau)right)^2left(p_0-q_0right) x_0(t)-d_0 x_0(t) d x_1 =fracv_01+beta_0left(x_2(t-tau)right)^2left(1-p_0+q_0right) x_0(t) +fracv_11+beta_1left(x_2(t-tau)right)^2left(p_1-q_1right) x_1(t)-d_1 x_1(t) d x_2 =fracv_11+beta_1left(x_2(t-tau)right)^2left(1-p_1+q_1right) x_1(t)-d_2 x_2(t)endaligned更多方程种类可查官方文档。","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"求解并画图","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"sol = solve(prob, Tsit5())\r\nplot(sol,vars=(1,2,3))","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"(Image: 图 4)  ","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"全部代码：","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"using DifferentialEquations,Plots\r\nfunction lorenz!(du,u,p,t)\r\n        du[1] = p[1]*(u[2]-u[1])\r\n        du[2] = u[1]*(p[2]-u[3]) - u[2]\r\n        du[3] = u[1]*u[2] - p[3]*u[3]\r\nend\r\np = [10.0,28.0,8/3]\r\nu0 = [1.0;0.0;0.0]\r\ntspan = (0.0,100.0)\r\nprob = ODEProblem(lorenz!,u0,tspan,p)\r\nsol = solve(prob, Tsit5())\r\nplot(sol,vars=(1,2,3))","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"","category":"page"},{"location":"Modeling/DE_intro/#DE的Callback特性","page":"DifferentialEquations建模方法","title":"DE的Callback特性","text":"","category":"section"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"Callback的含义为，当系统运行到某个状态时，人为介入改变系统参量的值，随后继续求解。","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"下面以弹球系统为例，介绍Callback的用法。","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"弹球系统的特点是，当弹球碰到地面时，需要弹起。所以在模拟弹球系统时，需要考虑求解过程中速度的方法变化，这时候就用到callback。碰地的数学的描述为，弹球速度变量变为它的相反数。也就是说当弹球高度x变为0时，速度u需要变成-u。","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"其数学表达为：","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"x = v  v = -g","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"DE问题构建：","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"function f(du,u,p,t)\r\n    du[1] = u[2]\r\n    du[2] = -p\r\nend","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"其中，","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"u1为x，即弹球高度\nu2为v，即弹球速度","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"建立Callback函数：","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"function condition(u,t,integrator) # Event when event_f(u,t) == 0\r\n    u[1]\r\nend\r\nfunction affect!(integrator)\r\nintegrator.u[2] = -integrator.u[2]\r\nend\r\ncb = ContinuousCallback(condition,affect!)","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"condition为系统调用callback时应该满足的条件，默认为函数返回值为0（false）时的情况。即u[1]=0。 affect!为系统调用callback时的处理动作，这里为将速度变负。","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"定义剩余要素并求解，在solve中需要传递callback。","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"u0 = [50.0,0.0]\r\ntspan = (0.0,15.0)\r\np = 9.8\r\nprob = ODEProblem(f,u0,tspan,p)\r\nsol = solve(prob,Tsit5(),callback=cb)\r\nplot(sol)","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"可以得到如下结果：","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"(Image: 图 5)","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"如果考虑反弹损失（每次反弹速度损失20%）：","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"function affect!(integrator)\r\nintegrator.u[2] = -integrator.u[2]*0.8\r\nend","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"(Image: 图 6)  ","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"也能够得到相应的结果，妙啊！！！","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"全部代码：","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"using DifferentialEquations,Plots\r\nfunction f(du, u, p, t)\r\n    du[1] = u[2]\r\n    du[2] = -p\r\nend\r\nfunction condition(u, t, integrator) # Event when event_f(u,t) == 0\r\n    u[1]\r\nend\r\nfunction affect!(integrator)\r\n    integrator.u[2] = -integrator.u[2]\r\nend\r\ncb = ContinuousCallback(condition, affect!)\r\nu0 = [50.0, 0.0]\r\ntspan = (0.0, 15.0)\r\np = 9.8\r\nprob = ODEProblem(f, u0, tspan, p)\r\nsol = solve(prob, Tsit5(), callback=cb)\r\nplot(sol)","category":"page"},{"location":"Modeling/DE_intro/","page":"DifferentialEquations建模方法","title":"DifferentialEquations建模方法","text":"tip: Tip\nDE中有许多特性，例如求解结果的处理（Solution Handle）、回调函数（Callback）等等。更多特性可以在官方文档中查看。","category":"page"},{"location":"#LearnDocs","page":"Home","title":"LearnDocs","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: julia图片)","category":"page"},{"location":"#LearnDocs简介","page":"Home","title":"LearnDocs简介","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"LearnDocs是Ai4小组在学习中整理的一些可操作案例。案例的核心主要与建模仿真优化控制相关。文档主要特点为：","category":"page"},{"location":"","page":"Home","title":"Home","text":"既有数学层面的探究，也包含了应用层面的案例。\n包含大量Julia生态中软件包的使用\n兼顾建模仿真优化控制核心与拓展\n分享对理论抽象问题的认识\n分享软件使用过程中的技巧\n分享踩坑的心路历程与对库使用的理解","category":"page"},{"location":"","page":"Home","title":"Home","text":"供大家学习参考。","category":"page"},{"location":"","page":"Home","title":"Home","text":"欢迎各位贡献文档！","category":"page"},{"location":"#Julia资源传送门","page":"Home","title":"Julia资源传送门","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Julia中文文档\nJulia官方文档\nSciml总站\nModelingToolkit.jl\nDifferentialEquations.jl\nSymbolics.jl\nJuMP.jl\nDiffEqParamEstim.jl\nCSV.jl\nDataFrames.jl\nUnitful","category":"page"},{"location":"#其它资源传送门","page":"Home","title":"其它资源传送门","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CoolProp","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: Stable)","category":"page"},{"location":"CS Base/env_variable/#环境（变量）的本质","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"","category":"section"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"tip: Tip\nContents：环境、环境变量Contributor: YJYEmail:522432938@qq.com如有错误，请批评指正。","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"我们都听过环境、环境变量等等名词。那么，它的本质到底是什么呢？","category":"page"},{"location":"CS Base/env_variable/#命名","page":"环境（变量）的本质","title":"命名","text":"","category":"section"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"假设现在有一个程序对象：","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"akdhihei","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"你知道这是个什么高级语法吗？","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"对的，这就是我胡乱打的，我也不知道它是什么。","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"那么再看一个对象：","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"path","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"这可能就有些熟悉了，配置过环境的同学都知道，path是我们的环境变量。","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"再看：","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"a","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"a又是什么呢？与上面的path类比，那么a就是一个变量呗！","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"那么这个变量有什么含义吗？没有！","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"那么现在再反问，上面的path有意义吗？","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"你可能说：有！它是环境变量！","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"但是上面那个path是谁的环境变量，它又指向了谁！","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"你可能有一点点明白了！","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"这些变量：akdhihei、path、a他们都是变量，本质可以说是容器可以存放值，也可以说是一个程序的对象，它本身没有意义！","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"它就是一个名称罢了，我们称之为命名。","category":"page"},{"location":"CS Base/env_variable/#环境","page":"环境（变量）的本质","title":"环境","text":"","category":"section"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"那么，怎样才能让命名有意义呢？","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"没错，就是给他赋值！","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"也可以说，没有值的变量并没有存在的意义","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"（你是不是联想到了，你写Python，Java的时候，当你没有使用某个变量，没有赋值，只是定义的时候，编辑器会有小波浪，向你提出warnings！）","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"现在你应该明白了，定而不用，就是没有意义，没有价值，浪费内存资源。因为这个内存（地址）就被占了。用一句话概括就是，占着茅坑不拉屎！","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"为了让它有意义，应该干嘛？赋值！","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"比如:","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"#define a 5\r\n\r\n#define akdhihei 8","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"那么现在可以说，这些被命名的对象们有了意义。它们和某一个具体的值联系起来了，后面的程序中，你看到a就知道它代表5！看到akdhihei就知道它代表8！","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"print(a + 1)","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"你一定知道这个程序的结果是什么。而在a被赋值之前，你并不知道！","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"那么这个操作的本质是什么呢？","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"是值与符号进行关联，关联之后，又可以通过符号提取数值。那么这是怎么做到的呢？解释器会维护着这样一种储存能力，以便保持着有关的名字-值对偶的关联！","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"而这种存储，就被称之为环境，（更加准确是，全局环境），那么局部变量，和其它不同作用域，就是不同的环境！这就是环境的本质！","category":"page"},{"location":"CS Base/env_variable/#path环境变量","page":"环境（变量）的本质","title":"path环境变量","text":"","category":"section"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"刚刚所说的是广义的环境。那么以path代表的环境变量是环境概念下的子集。","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"以python环境为例，在没有配置python环境之前，你在CMD终端中输入python，会显示","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"'python' 不是内部或外部命令，也不是可运行的程序或批处理文件。","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"而你把python环境配置一下之后，就可以了。","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"那其中到底干了什么呢？","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"其本质就是，path是一个变量，里面储存着一些文件的路径。在CMD命令行中输入命令的时候，系统会去path里面找相应的程序（或者在写程序的时候对调用path的路径等等）。比如说你的python.exe 路径为\"E:/\"，你把\"E:/\"加入到环境变量path中，那么就可以找到了，就可以在终端中运行了。","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"那么，这个概念依旧是名字-值的关联。path是名字，文件路径是\"E:/\"，环境变量这个狭义概念的赋予是因为，在windows系统中，CMD会通过path中提供的路径去搜寻，如果没有在path中配置（把路径赋值给path），就找不到，就可以通过CMD执行（你手动进入那个文件夹，鼠标点击运行是一点问题也没有的！）。这相当于在Windows下的一个CMD运行环境path，CMD是系统级别的，所以这个环境比较高级。上面的a=5这个环境就很不重要了！但他们的本质都是一样的——","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"那就是字符（名称）-值的关联。","category":"page"},{"location":"CS Base/env_variable/","page":"环境（变量）的本质","title":"环境（变量）的本质","text":"配置环境=把变量（path）和值（文件路径）关联上这一行为过程","category":"page"}]
}
